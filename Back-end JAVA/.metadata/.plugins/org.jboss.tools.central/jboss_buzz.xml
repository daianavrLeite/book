<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Kogito 0.8.0 features online editors and cloud-native business automation</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BnFz5dlB_0Y/" /><category term="BPMN" scheme="searchisko:content:tags" /><category term="business automation" scheme="searchisko:content:tags" /><category term="DMN" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="istio" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="kogito" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>Karina Varela</name></author><id>searchisko:content:id:jbossorg_blog-kogito_0_8_0_features_online_editors_and_cloud_native_business_automation</id><updated>2020-03-20T07:00:10Z</updated><published>2020-03-20T07:00:10Z</published><content type="html">&lt;p&gt;&lt;a href="http://kogito.kie.org/" target="_blank" rel="noopener noreferrer"&gt;Kogito&lt;/a&gt; is a cloud-native business automation solution that offers a powerful, developer-friendly experience. Based on production-tested open source projects Drools and jBPM, Kogito has business rules and processes down to a science. Kogito also aligns with popular lightweight runtimes such as &lt;a href="https://developers.redhat.com/blog/2019/08/29/kogito-for-quarkus-intelligent-applications/" target="_blank" rel="noopener noreferrer"&gt;Quarkus&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2019/08/29/create-your-first-application-with-kogito/" target="_blank" rel="noopener noreferrer"&gt;Spring Boot&lt;/a&gt; to support developers building business-driven applications.&lt;/p&gt; &lt;p&gt;This article is an overview of the new enhancements for Kogito 0.8.0, which was released on March 10, 2020.&lt;/p&gt; &lt;p&gt;&lt;span id="more-695697"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Kogito Runtimes and Kogito Tooling&lt;/h2&gt; &lt;p&gt;Kogito is a young technology that is quickly evolving. For this release, developers targeted updates and feature enhancements for Kogito Runtimes and Kogito Tooling. Kogito Runtimes enables applications to execute business processes and decisions. Its components facilitate the deployment of business applications in &lt;a href="https://www.openshift.com" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift&lt;/a&gt;, a container platform built on Kubernetes. Meanwhile, Kogito Tooling delivers authoring tools and environments that support the lifecycle of business-driven applications.&lt;/p&gt; &lt;p&gt;&lt;img class="wp-image-695837 alignleft" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/kogito_icon_rgb_color_default_256px.png" alt="" width="62" height="62" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/kogito_icon_rgb_color_default_256px.png 256w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/kogito_icon_rgb_color_default_256px-150x150.png 150w" sizes="(max-width: 62px) 100vw, 62px" /&gt;&lt;/p&gt; &lt;h2&gt;Highlights and new features&lt;/h2&gt; &lt;p&gt;The Kogito 0.8.0 release includes more than 25 new feature requests, 35 enhancements, and over 40 bug fixes to Kogito Runtimes. Updates to Kogito Tooling were also robust, including bug fixes and enhancements to the VS Code editor, Chrome extensions for Business Process Model and Notation (BPMN) and Decision Model and Notation (DMN), and new online editors.&lt;/p&gt; &lt;p&gt;This section covers highlights and new features to look for in Kogito Runtimes and Kogito Tooling. See the &lt;a href="https://groups.google.com/forum/?utm_medium=email&amp;#38;utm_source=footer#!msg/kogito-development/hx9LkWj6Dyc/LIEFbUBqAgAJ" target="_blank" rel="noopener noreferrer"&gt;Kogito Google Group&lt;/a&gt; and the &lt;a href="https://github.com/kiegroup/kogito-tooling/releases" target="_blank" rel="noopener noreferrer"&gt;Kogito Tooling GitHub page&lt;/a&gt; for a complete list of updates and enhancements.&lt;/p&gt; &lt;h3&gt;Online authoring tools&lt;/h3&gt; &lt;p&gt;One of Kogito&amp;#8217;s goals is to increase productivity for business automation experts, and a sure way to do that is to support business managers authoring executable business logic in the cloud. With this release, we&amp;#8217;re proud to present &lt;a href="https://kiegroup.github.io/kogito-online/" target="_blank" rel="noopener noreferrer"&gt;Kogito online editors for BPMN and DMN&lt;/a&gt;. These ready-to-use online tools do not require any local setup.&lt;/p&gt; &lt;p&gt;Anyone can use these new editors to sketch business-process diagrams based on BPMN or business decisions based on DMN specifications. Figure 1, courtesy of &lt;a href="https://porcelli.me/announcement/tooling/online/bpmn/dmn/2020/03/12/online-new-editors.html" target="_blank" rel="noopener noreferrer"&gt;Alex Porcelli&lt;/a&gt;, demonstrates the DMN online editor. (If this image does not animate, click it to watch the walk-through.)&lt;/p&gt; &lt;div id="attachment_695787" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample.gif"&gt;&lt;img aria-describedby="caption-attachment-695787" class="wp-image-695787 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-1024x516.gif" alt="Animated image showing how you can edit your DMN in Kogito." width="640" height="323" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-1024x516.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-300x151.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/try-sample-768x387.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-695787" class="wp-caption-text"&gt;Figure 1: Kogito&amp;#8217;s DMN online editor (source: &lt;a href="https://porcelli.me/announcement/tooling/online/bpmn/dmn/2020/03/12/online-new-editors.html" target="_blank" rel="noopener noreferrer"&gt;Alex Porcelli&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt; &lt;p&gt;With this release, we&amp;#8217;ve also integrated Google&amp;#8217;s &lt;a href="https://www.techradar.com/news/google-brings-its-new-tld-to-the-rest-of-the-internet" target="_blank" rel="noopener noreferrer"&gt;.new domain initiative&lt;/a&gt;. You can try out the community editors supporting the .new domain at &lt;a href="http://bpmn.new" target="_blank" rel="noopener noreferrer"&gt;bpmn.new&lt;/a&gt; and &lt;a href="http://dmn.new" target="_blank" rel="noopener noreferrer"&gt;dmn.new&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Kogito Management Console&lt;/h3&gt; &lt;p&gt;The new Kogito Management Console takes a fresh approach to viewing and managing process instances (see Figure 2, if this image does not animate, click it to watch the walk-through.) Backed by the Kogito Data Index, the new management console supports visualization and management from both a process-instance perspective and a domain-based view. As a developer, this means you&amp;#8217;ll get a detailed view of running process instances, along with variables, related subprocesses, and task execution.&lt;/p&gt; &lt;div id="attachment_698597" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280.gif"&gt;&lt;img aria-describedby="caption-attachment-698597" class="wp-image-698597 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-1024x640.gif" alt="Kogito Management Console open to Process instances." width="640" height="400" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-1024x640.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-300x188.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-process-instances-080-1280-768x480.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-698597" class="wp-caption-text"&gt;Figure 2: View and manage process instances (source: &lt;a href="https://github.com/kmacedovarela/images-repo/tree/master/kogito-management-console" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Developers can also use the Kogito Domain Explorer to navigate business data in a selected domain. As an example, Figure 3 shows the visualization of a travel-agency domain that tracks client travels and travel visas. (If this image does not animate, click it to watch the walk-through.)&lt;/p&gt; &lt;div id="attachment_698657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280.gif"&gt;&lt;img aria-describedby="caption-attachment-698657" class="wp-image-698657 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-1024x640.gif" alt="Kogito Management Console Domain Explorer example" width="640" height="400" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-1024x640.gif 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-300x188.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/monitoring-domain-explorer-080-1280-768x480.gif 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-698657" class="wp-caption-text"&gt;Figure 3: Navigate business data within a domain (source: &lt;a href="https://github.com/kmacedovarela/images-repo/tree/master/kogito-management-console" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Meaningful process IDs&lt;/h3&gt; &lt;p&gt;The addition of meaningful process IDs in Kogito 0.8.0 simplifies the correlation of new processes with existing business information. While you may still use autogenerated process IDs, you now have the option to create a unique reference based on a business key.&lt;/p&gt; &lt;p&gt;You would create a unique reference by issuing a query parameter named &lt;code&gt;businessKey&lt;/code&gt; along with your request to start a new process instance. If you wanted to start an order process correlated to the business key ORDER-0001, for instance, you would issue a request like this one:&lt;/p&gt; &lt;pre&gt;POST /orders?businessKey=ORDER-0001 &lt;/pre&gt; &lt;p&gt;You would then be able to retrieve the new process instance with the new reference ID:&lt;/p&gt; &lt;pre&gt;GET /orders/ORD-0001 &lt;/pre&gt; &lt;p&gt;You could also delete the process instance by sending an HTTP delete request with the same reference ID:&lt;/p&gt; &lt;pre&gt;DELETE /orders/ORD-0001 &lt;/pre&gt; &lt;h3&gt;Process-variable tagging&lt;/h3&gt; &lt;p&gt;The Kogito runtime now provides support for process-variable tagging. This feature allows developers to provide metadata about a process variable, and even group processes according to their needs. You could use this feature to group and classify important business KPIs; process inputs and outputs; and tag variables as required, internal, or read-only. See &lt;a href="https://issues.redhat.com/browse/KOGITO-19" target="_blank" rel="noopener noreferrer"&gt;KOGITO-19&lt;/a&gt; to learn more about this enhancement.&lt;/p&gt; &lt;h3&gt;Kogito Operator and Kogito CLI&lt;/h3&gt; &lt;p&gt;Kogito Operator and Kogito CLI are both existing tools that have been enhanced with new features. Based on the popular &lt;a href="https://developers.redhat.com/products/openshift/overview" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;, Kogito Operator supports deploying Kogito Runtimes directly from the project&amp;#8217;s source. As a developer, you can interact with Kogito Operator from the Kogito CLI.&lt;/p&gt; &lt;p&gt;One of the new parameters available on the Kogito CLI is &lt;code&gt;-enable-istio&lt;/code&gt;. Setting this parameter upon creating a new Kogito application instructs Kogito Operator to enable &lt;a href="https://istio.io/docs/concepts/what-is-istio/" target="_blank" rel="noopener noreferrer"&gt;Istio service mesh sidecars&lt;/a&gt;. Once enabled, the sidecars automatically combine tracing, security, observability, and monitoring in your Kogito pods.&lt;/p&gt; &lt;h3&gt;Kogito Jobs Service&lt;/h3&gt; &lt;p&gt;The new &lt;a href="https://github.com/kiegroup/kogito-runtimes/wiki/Jobs-Service" target="_blank" rel="noopener noreferrer"&gt;Kogito Jobs Service&lt;/a&gt; offers a dedicated, lightweight solution for job scheduling. This service is currently able to schedule two types of jobs. A &lt;em&gt;time scheduled job&lt;/em&gt; executes only once, at a given point in time, while a &lt;em&gt;periodically scheduled job&lt;/em&gt; starts at a given point in time and executes a predetermined number of times.&lt;/p&gt; &lt;h3&gt;Decision and process integration&lt;/h3&gt; &lt;p&gt;Kogito allows you to model a decision-driven service as either a self-contained decision service or an intelligent workflow with decision tasks. Whether you implement business decisions using Drools rules, DMN, or decision tables in a spreadsheet, Kogito will automatically generate REST endpoints for you.&lt;/p&gt; &lt;p&gt;In Kogito 0.8.0, we&amp;#8217;ve enhanced this feature to allow integration of DMN models with BPMN processes, so that &lt;a href="http://blog.athico.com/2020/03/kogito-ergo-rules-from-knowledge-to.html" target="_blank" rel="noopener noreferrer"&gt;business processes can be driven by intelligent decision nodes&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Join the Kogito community&lt;/h2&gt; &lt;p&gt;Kogito is an open source project backed by the &lt;a href="https://www.kiegroup.org/" target="_blank" rel="noopener noreferrer"&gt;KIE Group&lt;/a&gt;. The KIE Group also supports projects like jBPM, Drools, and OptaPlanner, which have been running at scale in different sectors for more than 10 years. You can be part of the Kogito community! Join the &lt;a href="https://groups.google.com/forum/?utm_medium=email&amp;#38;utm_source=footer#!forum/kogito-development" target="_blank" rel="noopener noreferrer"&gt;Kogito development group&lt;/a&gt; to ask questions and receive updates about Kogito&amp;#8217;s progress. We are also active on Twitter: &lt;a href="https://twitter.com/kogito_kie" target="_blank" rel="noopener noreferrer"&gt;@kogito_kie&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#38;linkname=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F20%2Fkogito-0-8-0-features-online-editors-and-cloud-native-business-automation%2F&amp;#038;title=Kogito%200.8.0%20features%20online%20editors%20and%20cloud-native%20business%20automation" data-a2a-url="https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/" data-a2a-title="Kogito 0.8.0 features online editors and cloud-native business automation"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/"&gt;Kogito 0.8.0 features online editors and cloud-native business automation&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BnFz5dlB_0Y" height="1" width="1" alt=""/&gt;</content><summary>Kogito is a cloud-native business automation solution that offers a powerful, developer-friendly experience. Based on production-tested open source projects Drools and jBPM, Kogito has business rules and processes down to a science. Kogito also aligns with popular lightweight runtimes such as Quarkus and Spring Boot to support developers building business-driven applications. This article is an ov...</summary><dc:creator>Karina Varela</dc:creator><dc:date>2020-03-20T07:00:10Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/20/kogito-0-8-0-features-online-editors-and-cloud-native-business-automation/</feedburner:origLink></entry><entry><title>Testing memory-based horizontal pod autoscaling on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jeLX6NK1MkQ/" /><category term="autoscaling" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="memory" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><category term="tech preview" scheme="searchisko:content:tags" /><category term="testing" scheme="searchisko:content:tags" /><author><name>mohammad ahmad</name></author><id>searchisko:content:id:jbossorg_blog-testing_memory_based_horizontal_pod_autoscaling_on_openshift</id><updated>2020-03-19T07:00:13Z</updated><published>2020-03-19T07:00:13Z</published><content type="html">&lt;p&gt;&lt;a href="http://developers.redhat.com/openshift/" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift&lt;/a&gt; offers horizontal pod autoscaling (HPA) primarily for CPUs, but it can also perform memory-based HPA, which is useful for applications that are more memory-intensive than CPU-intensive. In this article, I demonstrate how to use OpenShift&amp;#8217;s memory-based horizontal pod autoscaling feature (&lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/pod_autoscaling.html#pod-autoscaling-memory" target="_blank" rel="noopener noreferrer"&gt;tech preview&lt;/a&gt;) to autoscale your pods if the demands on memory increase. The test performed in this article might not necessarily reflect a real application. The tests only aim to demonstrate memory-based HPA in the simplest way possible.&lt;/p&gt; &lt;p&gt;&lt;span id="more-688567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;I use a simple PHP application (&lt;code&gt;index.php&lt;/code&gt;) that creates a large array in memory every time a request is made. The code looks like this:&lt;/p&gt; &lt;pre&gt;&amp;#60;?php $arr = array(); $arr_size = 100000; for ($i=1;$i&amp;#60;=$arr_size;$i++) { $arr[] = $i; } echo "created an array of $arr_size entries"; ?&amp;#62; &lt;/pre&gt; &lt;p&gt;You can perform this test with any language. The load test works by creating multiple parallel curl requests to the application. I chose PHP for its personal convenience.&lt;/p&gt; &lt;h2&gt;Check if &lt;code&gt;v2beta1&lt;/code&gt; is enabled&lt;/h2&gt; &lt;p&gt;Check if &lt;code&gt;v2beta1&lt;/code&gt; is enabled in your cluster:&lt;/p&gt; &lt;pre&gt;# oc get --raw /apis/autoscaling/v2beta1 {"kind":"APIResourceList","apiVersion":"v1","groupVersion":"autoscaling/v2beta1","resources":[{"name":"horizontalpodautoscalers","singularName":"","namespaced":true,"kind":"HorizontalPodAutoscaler","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["hpa"],"categories":["all"]},{"name":"horizontalpodautoscalers/status","singularName":"","namespaced":true,"kind":"HorizontalPodAutoscaler","verbs":["get","patch","update"]}]} &lt;/pre&gt; &lt;p&gt;If it isn’t enabled, follow the documentation for enabling it on your respective OpenShift version.&lt;/p&gt; &lt;h2&gt;Set up your testbed&lt;/h2&gt; &lt;p&gt;Before you can test, you need to set up the environment you&amp;#8217;re testing in and the application you&amp;#8217;re testing.&lt;/p&gt; &lt;h3&gt;Set up your environment&lt;/h3&gt; &lt;p&gt;To set up your new environment:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a new project:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc new-project memhpa Now using project "memhpa" on server "https://console.ocp.mylab:8443". &lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Create an image stream (this assumes that you have your authentication set up correctly):&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc import-image myphp --insecure --from=registry.redhat.io/openshift3/php-55-rhel7:latest --confirm imagestream.image.openshift.io/myphp imported &lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Apply limits to the namespaces before creating your first application:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# cat limits.yml apiVersion: "v1" kind: "LimitRange" metadata: name: "myphp-resource-limits" spec: limits: - type: "Pod" max: cpu: "2" memory: "120Mi" min: cpu: "200m" memory: "6Mi" - type: "Container" max: cpu: "2" memory: "120Mi" min: cpu: "100m" memory: "4Mi" default: cpu: "300m" memory: "100Mi" defaultRequest: cpu: "200m" memory: "100Mi" maxLimitRequestRatio: cpu: "10" # oc create -f limits.yml limitrange/myphp-resource-limits created&lt;/pre&gt; &lt;h3&gt;Set up the application&lt;/h3&gt; &lt;p&gt;To set up your application:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create the application:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc new-app --name app1 myphp:latest~https://gitlab.mylab/myproject/phpapp.git --build-env "GIT_SSL_NO_VERIFY=true" &lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Wait until your application is built and running:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc get pods NAME READY STATUS RESTARTS AGE app1-1-build 0/1 Completed 0 2m app1-1-plchw 1/1 Running 0 27s &lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Create a route:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc expose svc app1 route/app1-memhpa.apps.ocp.mylab created &lt;/pre&gt; &lt;h2&gt;Test your application&lt;/h2&gt; &lt;p&gt;Now, to test your application:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Test the application:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# curl http://app1-memhpa.apps.ocp.mylab/ created an array of 100000 &lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;If your application fails, try reducing the size of the PHP array.&lt;/p&gt; &lt;ol start="2"&gt; &lt;li&gt;Create a memory-based HPA definition:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# cat hpa.yml apiVersion: autoscaling/v2beta1 kind: HorizontalPodAutoscaler metadata: name: hpa-resource-metrics-memory spec: scaleTargetRef: apiVersion: apps.openshift.io/v1 kind: DeploymentConfig name: app1 minReplicas: 1 maxReplicas: 10 metrics: - type: Resource resource: name: memory targetAverageUtilization: 90 # oc create -f hpa.yml horizontalpodautoscaler.autoscaling/hpa-resource-metrics-memory created # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 &lt;span style="font-weight: 400;"&gt;&amp;#60;unknown&amp;#62;&lt;/span&gt;/90% 1 10 0 31m &lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Wait until the &lt;code&gt;&amp;#60;unknown&amp;#62;&lt;/code&gt; value shown above changes to an integer:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 75%/90% 1 10 1 33m &lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Create a load. I use a simple script that loops through a &lt;code&gt;curl&lt;/code&gt; command:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# cat loadphp.sh #!/bin/bash while true; do curl http://app1-memhpa.apps.ocp.mylab/; done done &lt;/pre&gt; &lt;ol start="5"&gt; &lt;li&gt;Run the following command a few times until you notice the load increasing:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# nohup ./loadphp.sh &amp;#38;&lt;/pre&gt; &lt;h2&gt;Observe the HPA&lt;/h2&gt; &lt;p&gt;You will start to notice an increase in memory utilization and corresponding autoscaling:&lt;/p&gt; &lt;pre&gt;# oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 75%/90% 1 10 1 33m # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 94%/90% 1 10 2 39m # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 90%/90% 1 10 2 48m # oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 85%/90% 1 10 3 52m &lt;/pre&gt; &lt;p&gt;Next, stop the load, and then watch the HPA. Several minutes after the load stops, the autoscaler eventually downscales the pods to one:&lt;/p&gt; &lt;pre&gt;NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-resource-metrics-memory DeploymentConfig/app1 29%/90% 1 10 1 1h &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, my aim was to provide the simplest of methods to set up and test memory-based horizontal pod autoscaling. I was able to demonstrate this process with a single PHP web page that creates a large array in memory, built using a basic Red Hat S2I PHP image, and set up in a namespace with limits and an HPA.&lt;/p&gt; &lt;p&gt;Once I set up the environment, I created a basic bash script to put a load on the application in order to observe an increasing load in memory, until the result is multiple autoscaled pods. After stopping the load, in a few minutes, the autoscaler reduced the pods down to one.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://developers.redhat.com/blog/author/dhatchett/" target="_blank" rel="noopener noreferrer"&gt;Damon Hatchett&lt;/a&gt; for peer-reviewing this article.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#38;linkname=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F19%2Ftesting-memory-based-horizontal-pod-autoscaling-on-openshift%2F&amp;#038;title=Testing%20memory-based%20horizontal%20pod%20autoscaling%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2020/03/19/testing-memory-based-horizontal-pod-autoscaling-on-openshift/" data-a2a-title="Testing memory-based horizontal pod autoscaling on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/19/testing-memory-based-horizontal-pod-autoscaling-on-openshift/"&gt;Testing memory-based horizontal pod autoscaling on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jeLX6NK1MkQ" height="1" width="1" alt=""/&gt;</content><summary>Red Hat OpenShift offers horizontal pod autoscaling (HPA) primarily for CPUs, but it can also perform memory-based HPA, which is useful for applications that are more memory-intensive than CPU-intensive. In this article, I demonstrate how to use OpenShift’s memory-based horizontal pod autoscaling feature (tech preview) to autoscale your pods if the demands on memory increase. The test performed in...</summary><dc:creator>mohammad ahmad</dc:creator><dc:date>2020-03-19T07:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/19/testing-memory-based-horizontal-pod-autoscaling-on-openshift/</feedburner:origLink></entry><entry><title>Cross-language link-time optimization using Red Hat Developer Tools</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/drANtdhCIfQ/" /><category term="Clang/LLVM" scheme="searchisko:content:tags" /><category term="cross-language LTO" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="Rust" scheme="searchisko:content:tags" /><category term="rust language" scheme="searchisko:content:tags" /><category term="toolset" scheme="searchisko:content:tags" /><author><name>Josh Stone</name></author><id>searchisko:content:id:jbossorg_blog-cross_language_link_time_optimization_using_red_hat_developer_tools</id><updated>2020-03-18T07:00:14Z</updated><published>2020-03-18T07:00:14Z</published><content type="html">&lt;p&gt;Several months ago, the LLVM project blog published an article, &lt;em&gt;&lt;a href="http://blog.llvm.org/2019/09/closing-gap-cross-language-lto-between.html" target="_blank" rel="noopener noreferrer"&gt;Closing the gap: cross-language LTO between Rust and C/C++&lt;/a&gt;&lt;/em&gt;. In it, they explained that link-time optimization can improve performance by optimizing throughout the whole program, such as inlining function calls between different objects. Since Rust and Clang both use LLVM for code generation, we can even achieve this benefit across different programming languages.&lt;/p&gt; &lt;p&gt;In &lt;a href="https://developers.redhat.com/topics/developer-tools/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Developer Tools&lt;/a&gt;, we have the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_tools/1/" target="_blank" rel="noopener noreferrer"&gt;Rust and LLVM Toolsets&lt;/a&gt;, which can easily be used together for cross-language link-time optimization (LTO), so let&amp;#8217;s try it out.&lt;/p&gt; &lt;p&gt;&lt;span id="more-688387"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Setup&lt;/h2&gt; &lt;p&gt;One of the caveats mentioned in the LLVM blog is &lt;a href="https://doc.rust-lang.org/rustc/linker-plugin-lto.html#toolchain-compatibility" target="_blank" rel="noopener noreferrer"&gt;toolchain compatibility&lt;/a&gt;, because cross-language LTO needs a close match between the LLVM libraries used by &lt;code&gt;rustc&lt;/code&gt; and &lt;code&gt;clang&lt;/code&gt;. The upstream Rust builds use a private copy of LLVM, which is sometimes even a snapshot rather than a final release, so it can be challenging to get a corresponding build of &lt;code&gt;clang&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Red Hat&amp;#8217;s Rust Toolset uses the shared LLVM library from the same LLVM Toolset we get Clang from, so we always know these compilers are using the same code generation backend, yielding compatible bytecode for LTO.&lt;/p&gt; &lt;p&gt;On Red Hat Enterprise Linux 8 (RHEL 8), both toolsets are available in the default AppStream repository. We can install their default module profiles to get complete toolchains for Rust and Clang:&lt;/p&gt; &lt;pre&gt;# yum module install rust-toolset llvm-toolset&lt;/pre&gt; &lt;p&gt;On Red Hat Enterprise Linux 7, the toolsets are available as software collections. After &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_tools/1/html/using_rust_1.39_toolset/chap-rust-intro#sect-Rust-access" target="_blank" rel="noopener noreferrer"&gt;getting access&lt;/a&gt; to the &lt;code&gt;devtools&lt;/code&gt; repository, we can install the current version of each toolset:&lt;/p&gt; &lt;pre&gt;# yum install rust-toolset-1.39 llvm-toolset-8.0&lt;/pre&gt; &lt;p&gt;Then, we can add them to our working &lt;code&gt;PATH&lt;/code&gt; by starting a new shell with Rust enabled, which implicitly enables LLVM as a dependency:&lt;/p&gt; &lt;pre&gt;$ scl enable rust-toolset-1.39 bash&lt;/pre&gt; &lt;h2&gt;Example: Inlined summation&lt;/h2&gt; &lt;p&gt;Rust documents a &lt;a href="https://doc.rust-lang.org/rustc/linker-plugin-lto.html" target="_blank" rel="noopener noreferrer"&gt;special option for LTO&lt;/a&gt;, &lt;code&gt;-C linker-plugin-lto&lt;/code&gt;, with example commands for C calling Rust and vice versa. Let&amp;#8217;s apply this option to a simple example summing from one to n. This example has a closed form &lt;code&gt;n(n+1)/2&lt;/code&gt; that most optimizers know, and with constant inputs, it may also compile to a constant.&lt;/p&gt; &lt;p&gt;First, there is our C code in &lt;code&gt;main.c&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;#include &amp;#60;stdio.h&amp;#62; int sum(int, int); int main() { printf("sum(%d, %d) = %d\n", 1, 100, sum(1, 100)); return 0; }&lt;/pre&gt; &lt;p&gt;Then, we have our Rust code in &lt;code&gt;sum.rs&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;#[no_mangle] pub extern "C" fn sum(start: i32, end: i32) -&amp;#62; i32 { (start..=end).sum() }&lt;/pre&gt; &lt;p&gt;If we compile this combination without LTO:&lt;/p&gt; &lt;pre&gt;$ rustc --crate-type=staticlib -Copt-level=2 sum.rs $ clang -c -O2 main.c $ clang ./main.o ./libsum.a -o main $ ./main sum(1, 100) = 5050 &lt;/pre&gt; &lt;p&gt;We can see in the disassembly (&lt;code&gt;objdump -d main&lt;/code&gt;) that &lt;code&gt;main&lt;/code&gt; makes a normal function call to &lt;code&gt;sum&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;00000000004005d0 &amp;#60;main&amp;#62;: 4005d0: 50 push %rax 4005d1: bf 01 00 00 00 mov $0x1,%edi 4005d6: be 64 00 00 00 mov $0x64,%esi 4005db: e8 20 00 00 00 callq 400600 &amp;#60;sum&amp;#62; 4005e0: bf e8 06 40 00 mov $0x4006e8,%edi 4005e5: be 01 00 00 00 mov $0x1,%esi 4005ea: ba 64 00 00 00 mov $0x64,%edx 4005ef: 89 c1 mov %eax,%ecx 4005f1: 31 c0 xor %eax,%eax 4005f3: e8 d8 fe ff ff callq 4004d0 &amp;#60;printf@plt&amp;#62; 4005f8: 31 c0 xor %eax,%eax 4005fa: 59 pop %rcx 4005fb: c3 retq 4005fc: 0f 1f 40 00 nopl 0x0(%rax) 0000000000400600 &amp;#60;sum&amp;#62;: ...&lt;/pre&gt; &lt;p&gt;Now, let&amp;#8217;s try it with cross-language LTO:&lt;/p&gt; &lt;pre&gt;$ rustc --crate-type=staticlib -Clinker-plugin-lto -Copt-level=2 sum.rs $ clang -c -flto=thin -O2 main.c $ clang -flto=thin -fuse-ld=lld -O2 ./main.o ./libsum.a -pthread -ldl -o main $ ./main sum(1, 100) = 5050&lt;/pre&gt; &lt;p&gt;This time in the disassembly, we can see that the call is gone, replaced with a simple constant &lt;code&gt;0x13ba&lt;/code&gt;, which is 5050:&lt;/p&gt; &lt;pre&gt;00000000002a6250 &amp;#60;main&amp;#62;: 2a6250: 50 push %rax 2a6251: bf b4 66 20 00 mov $0x2066b4,%edi 2a6256: be 01 00 00 00 mov $0x1,%esi 2a625b: ba 64 00 00 00 mov $0x64,%edx 2a6260: b9 ba 13 00 00 mov $0x13ba,%ecx 2a6265: 31 c0 xor %eax,%eax 2a6267: e8 04 03 00 00 callq 2a6570 &amp;#60;printf@plt&amp;#62; 2a626c: 31 c0 xor %eax,%eax 2a626e: 59 pop %rcx 2a626f: c3 retq&lt;/pre&gt; &lt;p&gt;This example isn&amp;#8217;t big enough for us to show any measurable performance difference, but I hope it&amp;#8217;s clear that there are real opportunities for greater optimization in larger programs—even across such different languages.&lt;/p&gt; &lt;h2&gt;Example: Firefox&lt;/h2&gt; &lt;p&gt;As mentioned in the LLVM blog post, Firefox was a major motivating case for cross-language LTO as a project mostly written in C++, but increasingly using Rust as well. Both languages can make FFI calls to the other, but there&amp;#8217;s overhead to those calls if they can never be inlined, even in trivial cases.&lt;/p&gt; &lt;p&gt;I&amp;#8217;m no expert on testing browser performance, but I was able to try a few builds of Firefox 73.0 using the Rust and LLVM Toolsets on Red Hat Enterprise Linux 8. Here&amp;#8217;s my &lt;code&gt;mozconfig&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;export CC=clang export CXX=clang++ export AR=llvm-ar export NM=llvm-nm export RANLIB=llvm-ranlib ac_add_options --disable-elf-hack ac_add_options --enable-release ac_add_options --enable-linker=lld&lt;/pre&gt; &lt;p&gt;I then compared builds by adding &lt;code&gt;--enable-lto=thin&lt;/code&gt; and &lt;code&gt;--enable-lto=cross&lt;/code&gt; (also implies &amp;#8220;thin&amp;#8221;). The bulk of the code is built into &lt;code&gt;libxul.so&lt;/code&gt;, and here&amp;#8217;s a rough comparison of that resulting binary:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;LTO&lt;/th&gt; &lt;th&gt;&lt;code&gt;.text&lt;/code&gt; size&lt;/th&gt; &lt;th&gt;&lt;code&gt;.data&lt;/code&gt; size&lt;/th&gt; &lt;th&gt;&lt;code&gt;nm&lt;/code&gt; symbols&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;#8211;&lt;/td&gt; &lt;td&gt;117,770,174&lt;/td&gt; &lt;td&gt;4,259,609&lt;/td&gt; &lt;td&gt;303,677&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;thin&lt;/td&gt; &lt;td&gt;115,602,351&lt;/td&gt; &lt;td&gt;4,249,968&lt;/td&gt; &lt;td&gt;268,377&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;cross&lt;/td&gt; &lt;td&gt;115,627,483&lt;/td&gt; &lt;td&gt;4,232,929&lt;/td&gt; &lt;td&gt;267,925&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;By these metrics, the bulk of the benefit comes from just enabling thin LTO at all, and in the cross build the code size got &lt;em&gt;slightly&lt;/em&gt; larger. Still, the symbol count did drop a little further in the cross build, which indicates in a crude way that there was probably more inlining, at least.&lt;/p&gt; &lt;p&gt;What does that result actually achieve for performance? I&amp;#8217;ll leave that to Firefox developers to measure themselves.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Link-time optimization is a great way to squeeze more performance into a large build, but if you&amp;#8217;re using multiple programming languages, the calls between them might have been a barrier. Now, the combination of Clang, Rust, and their common LLVM backend make cross-language LTO possible, and we can see some real benefits!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#38;linkname=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F18%2Fcross-language-link-time-optimization-using-red-hat-developer-tools%2F&amp;#038;title=Cross-language%20link-time%20optimization%20using%20Red%20Hat%20Developer%20Tools" data-a2a-url="https://developers.redhat.com/blog/2020/03/18/cross-language-link-time-optimization-using-red-hat-developer-tools/" data-a2a-title="Cross-language link-time optimization using Red Hat Developer Tools"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/18/cross-language-link-time-optimization-using-red-hat-developer-tools/"&gt;Cross-language link-time optimization using Red Hat Developer Tools&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/drANtdhCIfQ" height="1" width="1" alt=""/&gt;</content><summary>Several months ago, the LLVM project blog published an article, Closing the gap: cross-language LTO between Rust and C/C++. In it, they explained that link-time optimization can improve performance by optimizing throughout the whole program, such as inlining function calls between different objects. Since Rust and Clang both use LLVM for code generation, we can even achieve this benefit across dif...</summary><dc:creator>Josh Stone</dc:creator><dc:date>2020-03-18T07:00:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/18/cross-language-link-time-optimization-using-red-hat-developer-tools/</feedburner:origLink></entry><entry><title>How to use the new Kafka Client API for Kafka-specific message properties in Open Liberty 20.0.0.3</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vTomIOJ8a40/" /><category term="Apache Kafka" scheme="searchisko:content:tags" /><category term="event-driven" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="microprofile" scheme="searchisko:content:tags" /><category term="MicroProfile Config" scheme="searchisko:content:tags" /><category term="Open Liberty" scheme="searchisko:content:tags" /><category term="Rest client" scheme="searchisko:content:tags" /><category term="Stream Processing" scheme="searchisko:content:tags" /><author><name>Tom Jennings</name></author><id>searchisko:content:id:jbossorg_blog-how_to_use_the_new_kafka_client_api_for_kafka_specific_message_properties_in_open_liberty_20_0_0_3</id><updated>2020-03-17T07:00:18Z</updated><published>2020-03-17T07:00:18Z</published><content type="html">&lt;p&gt;In Open Liberty 20.0.0.3, you can now access &lt;a href="#kafka"&gt;Kafka-specific properties&lt;/a&gt; such as the message key and message headers, rather than just the message payload, as was the case with the basic MicroProfile Reactive Messaging &lt;code&gt;Message&lt;/code&gt; API. Also, you can now &lt;a href="#ASCA"&gt;set the &lt;code&gt;SameSite&lt;/code&gt; attribute in the session cookie&lt;/a&gt;, the LTPA, and &lt;a href="https://developers.redhat.com/cheatsheets/microprofile-jwt/" target="_blank" rel="noopener noreferrer"&gt;JWT&lt;/a&gt; cookies as well as in application-defined cookies.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; View the list of &lt;a href="https://github.com/OpenLiberty/open-liberty/issues?utf8=%E2%9C%93&amp;#38;q=label%3Arelease%3A20003+label%3A%22release+bug%22" target="_blank" rel="noopener noreferrer"&gt;fixed bugs in Open Liberty 20.0.0.3 here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you&amp;#8217;re interested in what&amp;#8217;s coming soon in Open Liberty, take a look at our &lt;a href="#previews"&gt;current development builds&lt;/a&gt;. These include updated features to MicroProfile (&lt;a href="https://developers.redhat.com/cheatsheets/microprofile-rest-client/" target="_blank" rel="noopener noreferrer"&gt;Rest Client&lt;/a&gt;, Metrics, Health, Fault Tolerance, and Config), as well as GraphQL with Open Liberty, automatically compressing HTTP responses, and persistent EJB timers.&lt;/p&gt; &lt;h2 id="run"&gt;Run your apps using 20.0.0.3&lt;/h2&gt; &lt;p&gt;If you&amp;#8217;re using &lt;a href="https://openliberty.io//guides/maven-intro.html" target="_blank" rel="noopener noreferrer"&gt;Maven&lt;/a&gt;, here are the coordinates:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.openliberty&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;openliberty-runtime&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;20.0.0.3&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;zip&amp;#60;/type&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;p&gt;Or, for &lt;a href="https://openliberty.io//guides/gradle-intro.html" target="_blank" rel="noopener noreferrer"&gt;Gradle&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;dependencies { libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '[20.0.0.3,)' }&lt;/pre&gt; &lt;p&gt;Or, if you&amp;#8217;re using Docker:&lt;/p&gt; &lt;pre&gt;FROM open-liberty&lt;/pre&gt; &lt;p&gt;Or, take a look at our &lt;a href="https://openliberty.io//downloads/" target="_blank" rel="noopener noreferrer"&gt;downloads page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/tags/open-liberty"&gt;&lt;img src="img/blog/blog_btn_stack.svg" alt="Ask a question on Stack Overflow" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2 id="kafka"&gt;Kafka-specific properties&lt;/h2&gt; &lt;p&gt;New to Open Liberty is Kafka-specific properties. The basic MicroProfile Reactive Messaging &lt;code&gt;Message&lt;/code&gt; API does not let the user access anything other than the message payload. The native Kafka client API allows users to access Kafka-specific message properties, such as the message key and message headers.&lt;/p&gt; &lt;h3 id="_incoming_messages"&gt;Incoming messages&lt;/h3&gt; &lt;p&gt;For incoming messages, we have now allowed the user to unwrap a &lt;code&gt;Message&lt;/code&gt; to gain access to the underlying &lt;code&gt;ConsumerRecord&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#62;@Incoming("channel1") public CompletionStage consume(Message message) { ConsumerRecord&amp;#60;String, String&amp;#62; cr = (ConsumerRecord&amp;#60;String, String&amp;#62;) message.unwrap(ConsumerRecord.class); String key = consumerRecord.key(); String value = consumerRecord.value(); String topic = consumerRecord.topic(); int partition = consumerRecord.partition(); long timestamp = consumerRecord.timestamp(); Headers headers = consumerRecord.headers(); // some more code.... return CompletableFuture.completedFuture(null); }&lt;/pre&gt; &lt;h3 id="_outgoing_messages"&gt;Outgoing messages&lt;/h3&gt; &lt;p&gt;For outgoing messages, if the payload is a &lt;code&gt;ProducerRecord&lt;/code&gt;, then the properties within it are passed on to Kafka:&lt;/p&gt; &lt;pre&gt;&amp;#62;@Outgoing("channel2") public Message publish() throws UnsupportedEncodingException { ProducerRecord&amp;#60;String, String&amp;#62; producerRecord = new ProducerRecord&amp;#60;String, String&amp;#62;("myTopic", null, "myKey", "myValue"); producerRecord.headers().add("HeaderKey", "HeaderValue".getBytes("UTF-8")); return Message.of(producerRecord); }&lt;/pre&gt; &lt;p&gt;The example above assumes that no topic was explicitly pre-configured in the MicroProfile Config for the channel. If the topic is pre-configured, then that will take precedence and the topic in the &lt;code&gt;ProducerRecord&lt;/code&gt; will be ignored.&lt;/p&gt; &lt;h3 id="_example_using_a_pre_configured_topic"&gt;Example using a pre-configured topic&lt;/h3&gt; &lt;p&gt;In this example, the topic is pre-configured using MicroProfile Config to be &lt;code&gt;myOtherTopic&lt;/code&gt;, so the topic set in the &lt;code&gt;ProducerRecord&lt;/code&gt; is ignored. Here are the MicroProfile Config properties:&lt;/p&gt; &lt;pre&gt;&amp;#62;mp.reactive.messaging.channel3.connector=liberty-kafka mp.reactive.messaging.channel3.topic=myOtherTopic #Overrides value in code&lt;/pre&gt; &lt;p&gt;Here is the reactive messaging bean:&lt;/p&gt; &lt;pre&gt;&amp;#62;@Outgoing("channel3") public Message&amp;#60;ProducerRecord&amp;#60;K, V&amp;#62;&amp;#62; publish() { ProducerRecord pr = new ProducerRecord("myTopic", "myValue"); return Message.of(pr); }/pre&amp;#62;&lt;/pre&gt; &lt;h2 id="ASCA"&gt;Adding the &lt;code&gt;SameSite&lt;/code&gt; cookie attribute&lt;/h2&gt; &lt;p&gt;Open Liberty now offers the ability to set the &lt;code&gt;SameSite&lt;/code&gt; attribute on the session cookie, the LTPA, and the JWT cookies as well as on the application-defined cookies. Implement the &lt;code&gt;SameSite&lt;/code&gt; attribute by adding one or more &lt;code&gt;server.xml&lt;/code&gt; configuration options. The servlet &lt;code&gt;javax.servlet.http.Cookie&lt;/code&gt; API does not offer the ability to set the &lt;code&gt;SameSite&lt;/code&gt; attribute on a cookie.&lt;/p&gt; &lt;p&gt;If the &lt;code&gt;SameSite&lt;/code&gt; attribute is needed, the options for setting it are currently limited to using the &lt;code&gt;HttpServletResponse.addHeader&lt;/code&gt; and &lt;code&gt;HttpServletResponse.setHeader&lt;/code&gt;, and constructing the &lt;code&gt;Set-Cookie&lt;/code&gt; header. The &lt;code&gt;SameSite&lt;/code&gt; attribute is used by browsers to determine if a particular cookie should be sent with a request. There are three values for the &lt;code&gt;SameSite&lt;/code&gt; attribute: &lt;code&gt;Lax&lt;/code&gt;, &lt;code&gt;Strict&lt;/code&gt;, and &lt;code&gt;None&lt;/code&gt;, as shown in Table 1.&lt;/p&gt; &lt;table&gt; &lt;caption&gt;Table 1: Values for the &lt;code&gt;SameSite&lt;/code&gt; attribute.&lt;/caption&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;Value&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;SameSite=Strict&lt;/code&gt;&lt;/td&gt; &lt;td&gt;The cookie will only be sent along with same-site requests. The cookie is only sent by the browser if the site for the cookie matches the site in the address bar, for example.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;SameSite=Lax&lt;/code&gt;&lt;/td&gt; &lt;td&gt;The cookie will be sent with same-site requests and with cross-site top-level navigations. Clicking a link, for example.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;SameSite=None&lt;/code&gt;&lt;/td&gt; &lt;td&gt;The cookie will be sent with same-site and cross-site requests. The cookie is sent by the browser for third party contexts and embedded content, for example.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;To use the &lt;code&gt;SameSite&lt;/code&gt; cookie attribute:&lt;/p&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol&gt; &lt;li&gt;Set the session cookie &lt;code&gt;SameSite&lt;/code&gt; attribute using the following &lt;code&gt;server.xml&lt;/code&gt; configuration:&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 80px;"&gt;&lt;code&gt;&amp;#60;httpSession cookieSameSite="Disabled|Strict|Lax|None"/&amp;#62;&lt;/code&gt;&lt;/p&gt; &lt;p style="padding-left: 80px;"&gt;The default value is &lt;code&gt;Disabled&lt;/code&gt;. This means that no &lt;code&gt;SameSite&lt;/code&gt; attribute will be added.&lt;/p&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol start="2"&gt; &lt;li&gt;Set the &lt;code&gt;LTPA/JWT&lt;/code&gt; cookie &lt;code&gt;SameSite&lt;/code&gt; attribute using the following &lt;code&gt;server.xml&lt;/code&gt; configuration:&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 80px;"&gt;&lt;code&gt;&amp;#60;webAppSecurity sameSiteCookie="Disabled|Strict|Lax|None"/&amp;#62;&lt;/code&gt;&lt;/p&gt; &lt;p style="padding-left: 80px;"&gt;The default value is &lt;code&gt;Disabled&lt;/code&gt;. This means that no &lt;code&gt;SameSite&lt;/code&gt; attribute will be added.&lt;/p&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol start="3"&gt; &lt;li&gt;Set the &lt;code&gt;SameSite&lt;/code&gt; attribute on cookies via the following &lt;code&gt;server.xml&lt;/code&gt; configuration:&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 80px;"&gt;&amp;#60;httpEndpoint id="defaultHttpEndpoint" httpPort="9080" httpsPort="9443" &amp;#62; &amp;#60;samesite lax="cookieOne" strict="cookieTwo" none="cookieThree"/&amp;#62; &amp;#60;/httpEndpoint&amp;#62;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;&amp;#60;httpEndpoint/&amp;#62;&lt;/code&gt; &lt;code&gt;SameSite&lt;/code&gt; configuration allows the use of wildcards in the following ways:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A standalone wildcard ( * ). All cookies would have the &lt;code&gt;SameSite=Lax&lt;/code&gt; attribute, which includes the session and LTPA/JWT cookies unless the &lt;code&gt;&amp;#60;httpSession/&amp;#62;&lt;/code&gt; and/or &lt;code&gt;&amp;#60;webAppSecurity/&amp;#62;&lt;/code&gt; configuration has also been set. For example:&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt; &amp;#60;httpEndpoint id="defaultHttpEndpoint" httpPort="9080" httpsPort="9443" &amp;#62; &amp;#60;samesite lax="*" /&amp;#62; &amp;#60;/httpEndpoint&amp;#62; &lt;/pre&gt; &lt;ul&gt; &lt;li&gt;At the end of one or more cookie names. The following snippet would map the following cookie names to &lt;code&gt;SameSite&lt;/code&gt; attributes: &lt;ul&gt; &lt;li&gt;&lt;code&gt;cookieOne&lt;/code&gt; → &lt;code&gt;SameSite=Lax&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cookieTwo&lt;/code&gt; → &lt;code&gt;SameSite=Strict&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cookieThree&lt;/code&gt; → &lt;code&gt;SameSite=None&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;pre style="padding-left: 40px;"&gt; &amp;#60;httpEndpoint id="defaultHttpEndpoint" httpPort="9080" httpsPort="9443" &amp;#62; &amp;#60;samesite lax="cookie*" strict="cookieTwo" none="cookieThree"/&amp;#62; &amp;#60;/httpEndpoint&amp;#62;&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;The &lt;code&gt;&amp;#60;httpSession/&amp;#62;&lt;/code&gt; and &lt;code&gt;&amp;#60;webAppSecurity/&amp;#62;&lt;/code&gt; configuration takes precedence over the &lt;code&gt;&amp;#60;httpEndpoint/&amp;#62;configuration&amp;#62;&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;When a cookie matches the &lt;code&gt;SameSite=None&lt;/code&gt; configuration, then the &lt;code&gt;Secure&lt;/code&gt; attribute will automatically be added to the cookie.&lt;/li&gt; &lt;/ul&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;&amp;#60;httpEndpoint/&amp;#62;&lt;/code&gt; configuration can apply to any &lt;code&gt;Set-Cookie&lt;/code&gt; header.&lt;/p&gt; &lt;p&gt;Technical details regarding the &lt;code&gt;SameSite&lt;/code&gt; attribute can be found in the following RFC: &lt;a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7"&gt;Cookies: HTTP State Management Mechanism&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Try Open Liberty 20.0.0.3 in Red Hat Runtimes now&lt;/h2&gt; &lt;p&gt;Open Liberty is part of the Red Hat Runtimes offering. If you&amp;#8217;re a &lt;a href="https://access.redhat.com/products/red-hat-runtimes" target="_blank" rel="noopener noreferrer"&gt;Red Hat Runtimes subscriber&lt;/a&gt;, you can try Open Liberty now.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#38;linkname=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F17%2Fhow-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3%2F&amp;#038;title=How%20to%20use%20the%20new%20Kafka%20Client%20API%20for%20Kafka-specific%20message%20properties%20in%20Open%20Liberty%2020.0.0.3" data-a2a-url="https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/" data-a2a-title="How to use the new Kafka Client API for Kafka-specific message properties in Open Liberty 20.0.0.3"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/"&gt;How to use the new Kafka Client API for Kafka-specific message properties in Open Liberty 20.0.0.3&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vTomIOJ8a40" height="1" width="1" alt=""/&gt;</content><summary>In Open Liberty 20.0.0.3, you can now access Kafka-specific properties such as the message key and message headers, rather than just the message payload, as was the case with the basic MicroProfile Reactive Messaging Message API. Also, you can now set the SameSite attribute in the session cookie, the LTPA, and JWT cookies as well as in application-defined cookies. Note: View the list of fixed bugs...</summary><dc:creator>Tom Jennings</dc:creator><dc:date>2020-03-17T07:00:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/17/how-to-use-the-new-kafka-client-api-for-kafka-specific-message-properties-in-open-liberty-20-0-0-3/</feedburner:origLink></entry><entry><title>Integrating with SaaS Applications - Example 3rd-Party Platform Integration</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1jHJAX1nr4Q/integrating-saas-applications-example-third-party-platform-integration.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integrating_with_saas_applications_example_3rd_party_platform_integration</id><updated>2020-03-17T06:00:03Z</updated><published>2020-03-17T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-f1x1Wl8_YFU/Xm-M1cKi5PI/AAAAAAAAw-0/GI1Gxp8I8_4bRPmxKxEcwzAxC4OOn8XPACNcBGAsYHQ/s1600/element-10.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="integrating with SaaS applications" border="0" data-original-height="900" data-original-width="1600" height="180" src="https://1.bp.blogspot.com/-f1x1Wl8_YFU/Xm-M1cKi5PI/AAAAAAAAw-0/GI1Gxp8I8_4bRPmxKxEcwzAxC4OOn8XPACNcBGAsYHQ/s320/element-10.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 5 - Example 3rd-party platform integration&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;The previous article in this series looked at&amp;nbsp;&lt;a href="https://www.schabell.org/2020/03/integrating-saas-applications-example-crm-connector-integration.html" target="_blank"&gt;a SaaS CRM connector integration example.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The foundation for this logical diagram was researching a use case where customers were successful with a portfolio solution.&lt;br /&gt;&lt;br /&gt;It's a starting point for the generic architectural blueprint that rises from several customer solution that were researched.&lt;br /&gt;&lt;br /&gt;Having completed the outline of the blueprint details and the resulting logical diagram elements, it's now time to take a look as specific examples.&lt;br /&gt;&lt;br /&gt;In this article we'll continue building the previous examples by sharing how customers are integrating with 3rd-party platforms in their architectures as SaaS platforms.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Blueprint scenarios&lt;/h3&gt;As a reminder, the architectural details covered here are base on real customer integration solutions using open source technologies.&lt;br /&gt;&lt;br /&gt;The example scenario presented here is a generic common blueprint that was uncovered researching customer solutions. It's my intent to provide a blueprint that provides guidance and not deep technical details.&lt;br /&gt;&lt;br /&gt;This section covers the visual representations as presented. There are many ways to represent each element in this architectural blueprint, but I've chosen icons, text and colors that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or&amp;nbsp;&lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;contact me directly&lt;/a&gt;&amp;nbsp;with your feedback.&lt;br /&gt;&lt;br /&gt;Now let's take a look at the details in this blueprint and outline the solution.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Integrating with SaaS platforms&lt;/h3&gt;The example blueprint shown in figure titled&amp;nbsp;&lt;i&gt;Example: Third-Party Platform Integration&lt;/i&gt;&amp;nbsp;outlines how to integrate an existing 3rd-party platform as if it's a SaaS platform.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-QQ7D2JX1IBs/Xm-K9Wqgl1I/AAAAAAAAw-k/NlxqwIWTdb0c_cUKlWfbAL4qxh_ZzLdlgCNcBGAsYHQ/s1600/Screenshot%2B2020-03-16%2Bat%2B15.18.59.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="integrating with 3rd-party platforms" border="0" data-original-height="885" data-original-width="1600" height="176" src="https://1.bp.blogspot.com/-QQ7D2JX1IBs/Xm-K9Wqgl1I/AAAAAAAAw-k/NlxqwIWTdb0c_cUKlWfbAL4qxh_ZzLdlgCNcBGAsYHQ/s320/Screenshot%2B2020-03-16%2Bat%2B15.18.59.png" title="" width="320" /&gt;&lt;/a&gt;As is often the case, organizational choices in our past have left us with legacy components in our architectures. While sometimes these are simple components to integrate with, we live and learn by applying the same abstractions to our larger platforms that might be hosting a collection of functionality in our organization.&lt;br /&gt;&lt;br /&gt;For example, let's assume this image above is making use of a legacy platform hosting a myriad of specialized services that have become impossible to maintain. The amount of interfaces and maintenance has become such a burden that the organization desires to migrate away from the legacy platform, yet cannot at this time due to their dependency on those hosted services.&lt;br /&gt;&lt;br /&gt;A logical approach is to segregate the platform as if it's a cloud or SaaS service. This allows for gradual migration of the existing services from the 3rd-party platform at your convenience, including evenutal moves to offsite or cloud-based service hosting. SaaS integration with these services or applications provides many options going forward in managing the architecture.&lt;br /&gt;&lt;br /&gt;The blueprint here shows a specific part of the integration, where a front end web connection uses front-end microservices to access integration microservices that manage that generice access to the third-party platform. Note, the security aspects are left in this example to ensure that you remember to include authentication and authorization across your integration landscape.&lt;br /&gt;&lt;br /&gt;Implementation details are left up to the reader to quantify as each organizations needs and usage of a specific SaaS integrations with all possible third-party platforms can not be captured in a generic architectural blueprint beyond the above.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;An overview of the series on integrating SaaS applications portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/01/integrating-saas-applications-an-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/02/integrating-saas-applications-common-architectural-elements.html" target="_blank"&gt;Common architectural elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/02/integrating-saas-applications-example-crm-integration.html" target="_blank"&gt;Example CRM integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/03/integrating-saas-applications-example-crm-connector-integration.html" target="_blank"&gt;Example CRM connector integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2020/03/integrating-saas-applications-example-third-party-platform-integration.html" target="_blank"&gt;Example 3rd-party platform integration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Example processes with 3rd-party platform integration&lt;/li&gt;&lt;/ol&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, taking a look at process integration with 3rd-party SaaS or SaaS-like platforms.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=u89AlwMWFZE:uK_Kpg9clQQ:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=u89AlwMWFZE:uK_Kpg9clQQ:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/u89AlwMWFZE" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1jHJAX1nr4Q" height="1" width="1" alt=""/&gt;</content><summary>Part 5 - Example 3rd-party platform integration The previous article in this series looked at a SaaS CRM connector integration example. The foundation for this logical diagram was researching a use case where customers were successful with a portfolio solution. It's a starting point for the generic architectural blueprint that rises from several customer solution that were researched. Having compl...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-03-17T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/u89AlwMWFZE/integrating-saas-applications-example-third-party-platform-integration.html</feedburner:origLink></entry><entry><title>JBoss Tools and Red Hat CodeReady Studio for Eclipse 2019-12</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7YmPI72ipYY/12.14.0.ga.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><category term="codereadystudio" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/12.14.0.ga.html</id><updated>2020-03-19T13:04:43Z</updated><published>2020-03-17T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://tools.jboss.org/downloads/jbosstools/2019-12/4.14.0.Final.html"&gt;JBoss Tools 4.14.0&lt;/a&gt; and &lt;a href="https://tools.jboss.org/downloads/devstudio/2019-12/12.14.0.GA.html"&gt;Red Hat CodeReady Studio 12.14&lt;/a&gt; for Eclipse 2019-12 are here waiting for you. Check it out!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/blog/images/crstudio12.png" alt="crstudio12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="installation"&gt;&lt;a class="anchor" href="#installation"&gt;&lt;/a&gt;Installation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview/"&gt;Red Hat CodeReady product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;java -jar codereadystudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.14 (2019-12) but we recommend using the latest &lt;a href="https://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-enterprise-java-developers"&gt;Eclipse 4.14 2019-12 JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;quot;JBoss Tools&amp;quot; or &amp;quot;Red Hat CodeReady Studio&amp;quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our main focus for this release was a new tooling for the Quarkus framework, improvements for container based development and bug fixing. Eclipse 2019-12 itself has a lot of new cool stuff but let me highlight just a few updates in both Eclipse 2019-12 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift"&gt;&lt;a class="anchor" href="#openshift"&gt;&lt;/a&gt;OpenShift&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="openshift-container-platform-4-3-support"&gt;&lt;a class="anchor" href="#openshift-container-platform-4-3-support"&gt;&lt;/a&gt;OpenShift Container Platform 4.3 support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With the new OpenShift Container Platform (OCP) 4.3 now available (see this &lt;a href="https://blog.openshift.com/introducing-red-hat-openshift-4-3-to-enhance-kubernetes-security/" target="_blank"&gt;article&lt;/a&gt;), JBoss Tools is compatible with this major release in a transparent way. Just define your connection to your OCP 4.3 based cluster as you did before for an OCP 3 cluster, and use the tooling !&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="new-openshift-application-explorer-view"&gt;&lt;a class="anchor" href="#new-openshift-application-explorer-view"&gt;&lt;/a&gt;New OpenShift Application Explorer view&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new OpenShift Application Explorer window has been added in addition to the OpenShift Explorer. It is based on &lt;a href="https://github.com/openshift/odo/" target="_blank"&gt;OpenShift Do&lt;/a&gt;. It provides a different and simplified user experience allowing easy and rapid feedback through inner loop and debugging.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s see it in action.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="opening-the-openshift-application-explorer-view"&gt;&lt;a class="anchor" href="#opening-the-openshift-application-explorer-view"&gt;&lt;/a&gt;Opening the OpenShift Application Explorer view&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you opened a brand new workspace, you should see the OpenShift Application Explorer view in the list of views available on the botton part of the screen:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer.png" alt="application explorer" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you don’t see the view being listed, you can open it through the &lt;code&gt;&lt;code&gt;Window -→ Show View -→ Other&lt;/code&gt;&lt;/code&gt; menu, enter &lt;code&gt;&lt;code&gt;open&lt;/code&gt;&lt;/code&gt; in the filter text box and then select &lt;code&gt;&lt;code&gt;OpenShift Application Explorer&lt;/code&gt;&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer1.png" alt="application explorer1" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer2.png" alt="application explorer2" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Expanding the root node will display the list of projects available on the cluster:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer3.png" alt="application explorer3" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="java-based-micro-service"&gt;&lt;a class="anchor" href="#java-based-micro-service"&gt;&lt;/a&gt;Java based micro service&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will show how to deploy a Java based microservice and how to use the various features. But we first need to load the component source code in our workspace. Thanks to the launcher wizard, we can do that easilly. Try &lt;code&gt;&lt;code&gt;Ctrl+N&lt;/code&gt;&lt;/code&gt; and select the &lt;code&gt;&lt;code&gt;Launcher project&lt;/code&gt;&lt;/code&gt; wizard:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer4.png" alt="application explorer4" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select &lt;code&gt;&lt;code&gt;rest-http&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Mission&lt;/code&gt;&lt;/code&gt; field, &lt;code&gt;&lt;code&gt;vert.x community&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Runtime&lt;/code&gt;&lt;/code&gt; field, &lt;code&gt;&lt;code&gt;myservice&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Project name&lt;/code&gt;&lt;/code&gt; field:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer5.png" alt="application explorer5" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button: a new project will be added to your workspace. Once the dependencies resolution has been completed, we’re ready to start playing with the cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="create-the-component"&gt;&lt;a class="anchor" href="#create-the-component"&gt;&lt;/a&gt;Create the component&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now that we have the source code, we can create the component. From the OpenShift Application Explorer view, right select the project (myproject), and the click the &lt;code&gt;&lt;code&gt;New → Component&lt;/code&gt;&lt;/code&gt; menu:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer6.png" alt="application explorer6" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter &lt;code&gt;&lt;code&gt;myservice&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/code&gt; field, click the &lt;code&gt;&lt;code&gt;Browse&lt;/code&gt;&lt;/code&gt; button to select the project we have just created, select &lt;code&gt;&lt;code&gt;java&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Component type&lt;/code&gt;&lt;/code&gt; field, select &lt;code&gt;&lt;code&gt;8&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Component version&lt;/code&gt;&lt;/code&gt; field, enter &lt;code&gt;&lt;code&gt;myapp&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/code&gt; field and uncheck the &lt;code&gt;&lt;code&gt;Push after create&lt;/code&gt;&lt;/code&gt; check-box:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer7.png" alt="application explorer7" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button. The component will be created and expanding the project node will now show the application that contains our component:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer8.png" alt="application explorer8" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Expanding the application will now display our component:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer9.png" alt="application explorer9" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The component has been created but it is not yet deployed on the cluster (as we unchecked the &lt;code&gt;&lt;code&gt;Push after create&lt;/code&gt;&lt;/code&gt; check-box. In order to deploy it,right select the component and click the &lt;code&gt;&lt;code&gt;Push&lt;/code&gt;&lt;/code&gt; menu. The deployment will be created and then a build will be launched. A new window will be created in the &lt;code&gt;&lt;code&gt;Console&lt;/code&gt;&lt;/code&gt; view. After a while, you should see the following output:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer10.png" alt="application explorer10" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The component is now deployed to the cluster but we cannot access it as we need to define an URL to access it externally. Right select the component and click the &lt;code&gt;&lt;code&gt;New → URL&lt;/code&gt;&lt;/code&gt; menu:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer11.png" alt="application explorer11" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter &lt;code&gt;&lt;code&gt;url1&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/code&gt; field and select &lt;code&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/code&gt; field:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer12.png" alt="application explorer12" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click on the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button. The URL is created but not on the cluster, so we need to push again the component so that the local configuration is synchronized with the configuration on the cluster. The &lt;code&gt;&lt;code&gt;Console&lt;/code&gt;&lt;/code&gt; window will display a message claiming that a push is now required:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer13.png" alt="application explorer13" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So push the component again (&lt;code&gt;&lt;code&gt;component → Push&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s check that we can now access the service. Expand the component level so that we can see the URL we have just created:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer14.png" alt="application explorer14" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Right select the URL and click the &lt;code&gt;&lt;code&gt;Open in Browser&lt;/code&gt;&lt;/code&gt; menu, you should see the new browser window:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer15.png" alt="application explorer15" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can test the service: enter &lt;code&gt;&lt;code&gt;demo&lt;/code&gt;&lt;/code&gt; in the text box and click the &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer16.png" alt="application explorer16" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="feedback-loop"&gt;&lt;a class="anchor" href="#feedback-loop"&gt;&lt;/a&gt;Feedback loop&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will now see how we can get fast feedback on code changes. So let’s modify the application code and see how we can synchronize the changes to the cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;code&gt;&lt;code&gt;Project Explorer&lt;/code&gt;&lt;/code&gt; view, locate the &lt;code&gt;&lt;code&gt;HttpApplication.java&lt;/code&gt;&lt;/code&gt; file:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer17.png" alt="application explorer17" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Double click on the file to open the editor:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer18.png" alt="application explorer18" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On line 14, change the line:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt; protected static final String template = &amp;quot;Hello, %s!&amp;quot;;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;to&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt; protected static final String template = &amp;quot;Hello, %s!, we modified the code&amp;quot;;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;and press the &lt;code&gt;&lt;code&gt;Ctrl+S&lt;/code&gt;&lt;/code&gt; key in order to save the file.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the OpenShift Application Explorer, right click the component (myservice) and click the &lt;code&gt;&lt;code&gt;Push&lt;/code&gt;&lt;/code&gt; menu to send the changes to the cluster: the component will be built again on the cluster with the next changes and after a few seconds, it will be available again:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer19.png" alt="application explorer19" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the browser window again, enter &lt;code&gt;&lt;code&gt;demo1&lt;/code&gt;&lt;/code&gt; in the textbox (we need to change the value we used before in order to make sure cache is not involved) and click the &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button again:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer20.png" alt="application explorer20" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve seen that, through a sequence of code modification(s) followed by a synchronize action (push) to the cluster, we can get a very fast feedback. If you don’t want to manually synchronize the the cluster (push), you can opt to automatically synchronize to the cluster with the &lt;code&gt;&lt;code&gt;Watch&lt;/code&gt;&lt;/code&gt; action: each time a code modification is done locally on your workstation, a new build will be automatically launched on the cluster.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="going-further-debug-your-application-on-the-cluster"&gt;&lt;a class="anchor" href="#going-further-debug-your-application-on-the-cluster"&gt;&lt;/a&gt;Going further: debug your application on the cluster&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Testing an application through code changes is a great achievement so far but it may be difficult for complex applications where we need to understand how the code behaves without the need to use the UI. That’s why the next step is to be able to debug our application live on the cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The new OpenShift Application Explorer allow such a scenario. We will first set up a breakpoint in our application code. Select again the &lt;code&gt;&lt;code&gt;HttpApplication.java&lt;/code&gt;&lt;/code&gt; file and scroll down to the &lt;code&gt;&lt;code&gt;greeting&lt;/code&gt;&lt;/code&gt; method:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer21.png" alt="application explorer21" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On line 41, double click in the left ruler column so that a breakpoint is set:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer22.png" alt="application explorer22" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We are now ready to debug our application. In order to do that, we need to launch a local (Java in our case) debugger that will be connected to our application on the cluster. This is what the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; action is doing: right select the component (myservice) and click the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; menu: you will see that port forwarding has been started so that our local (Java) debugger can connect to the remote Java virtual machine:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer23.png" alt="application explorer23" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;and then a local (Java) debugger is launched and connected to that port. Let’s check now that we can debug our application:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the browser window again, enter &lt;code&gt;&lt;code&gt;demo2&lt;/code&gt;&lt;/code&gt; in the textbox (we need to change the value we used before in order to make sure cache is not involved) and click the &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button again: as our breakpoint is hit, you will be asked if you want to switch to the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; perspective (this may not be displayed if you previously selected the &lt;code&gt;&lt;code&gt;Remember my decision&lt;/code&gt;&lt;/code&gt; checkbox:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer24.png" alt="application explorer24" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/code&gt; button and you will see the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; perspective:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer25.png" alt="application explorer25" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You are now debugging a Java component running on a remote cluster just like it was running locally on your workstation. Please note that we demoed this feature using a Java based component but we also support the same feature to NodeJS based components.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="quarkus"&gt;&lt;a class="anchor" href="#quarkus"&gt;&lt;/a&gt;Quarkus&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Starting with this release, we’ve added a new Quarkus tooling for applications built on top of the Supersonic Subatomic Java &lt;a href="https://quarkus.io"&gt;Quarkus&lt;/a&gt; framework.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="quarkus-project-creation-wizard"&gt;&lt;a class="anchor" href="#quarkus-project-creation-wizard"&gt;&lt;/a&gt;Quarkus project creation wizard&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new wizard has been added to create a new Quarkus application project in your workspace. In order to launch it, first enter Ctrl+N to get the list of available wizards&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus1.png" alt="quarkus1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the filter text box, enter the &lt;code&gt;&lt;code&gt;qu&lt;/code&gt;&lt;/code&gt; characters to filter the list of wizards:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus2.png" alt="quarkus2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the &lt;strong&gt;Quarkus Project&lt;/strong&gt; wizard and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus3.png" alt="quarkus3" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Project type&lt;/strong&gt; combo allows you to choose between Maven or Gradle tool used to manage your project. We’ll go with Maven for this tutorial.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter a project name (we will use code-with-quarkus) and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus4.png" alt="quarkus4" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This dialog allows you to choose various parameters for you project, like the project coordinates (group id, artifact id and version) along with the base REST endpoint information. We’ll use the default so click on the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus5.png" alt="quarkus5" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This dialog allows to select which Quarkus extensions you want to add to your project. The extensions are grouped by categories, so first select a specific category in the left table. We will choose the &lt;strong&gt;Web&lt;/strong&gt; one:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus6-1.png" alt="quarkus6 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should have noticed that the middle table has been updated. In order to add an extension, double click on the extension in the middle table. We will add &lt;strong&gt;RESTEasy JAX-RS&lt;/strong&gt; and &lt;strong&gt;RESTEasy Qute&lt;/strong&gt; (a templating engine):&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus7-1.png" alt="quarkus7 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should have noticed that the extensions that you double clicked on are now being added to the right table. If you want to remove an extension from the list of selected ones, double click again either in the center table or in the right table.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We are now all set so click on the &lt;strong&gt;Finish&lt;/strong&gt; button to launch the project creation. The project creation job is then launched, dependencies are being retrieved and after a while, the new project will appear in the &lt;strong&gt;Project Explorer&lt;/strong&gt; window:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus8.png" alt="quarkus8" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We have successfully created our first Quarkus project. Let’s see now how we can launch this application and debug it.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="running-the-quarkus-application"&gt;&lt;a class="anchor" href="#running-the-quarkus-application"&gt;&lt;/a&gt;Running the Quarkus application&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Running a Quarkus application can be done from the workbench Run configurations. Select the &lt;strong&gt;Run → Run Configurations…​&lt;/strong&gt; menu to display the dialog allowing to create a Run configuration.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus9.png" alt="quarkus9" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Scroll down until the &lt;strong&gt;Quarkus Application&lt;/strong&gt; is visible and select it:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus10-1.png" alt="quarkus10 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;strong&gt;New configuration&lt;/strong&gt; button (top left):&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus11-1.png" alt="quarkus11 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A workspace project needs to be associated with the configuration so click on the &lt;strong&gt;Browse&lt;/strong&gt; button to see the project selection dialog:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus12-1.png" alt="quarkus12 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As the workspace contains a single project, it is automatically selected and we can click on the &lt;strong&gt;OK&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus13-1.png" alt="quarkus13 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The configuration is now ready to be used. So let’s start our Quarkus application by clicking on the &lt;strong&gt;Run&lt;/strong&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should see a new Console being displayed.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus14.png" alt="quarkus14" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The application is being built and after a while, it will be started:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus15.png" alt="quarkus15" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debugging-the-quarkus-application"&gt;&lt;a class="anchor" href="#debugging-the-quarkus-application"&gt;&lt;/a&gt;Debugging the Quarkus application&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Debugging a Quarkus application is just a simple as launching the previous configuration we’ve just created in Debug. You just need to open the &lt;strong&gt;Run → Debug Configurations…​&lt;/strong&gt;. menu and click on the &lt;strong&gt;Debug&lt;/strong&gt; button.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It will start the Quarkus application like in the previous paragraph but also connect a remote JVM debug configuration to your running Quarkus application. So if you have set breakpoints in your application source files, the execution will automatically stops there.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="application-properties-content-assist"&gt;&lt;a class="anchor" href="#application-properties-content-assist"&gt;&lt;/a&gt;application.properties content assist&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Every Quarkus application is configured through a configuration called &lt;strong&gt;application.properties&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The content of this configuration file is dependent of the set of Quarkus extensions that your application is using. Some settings are mandatory, some others are not and the possible values are specific to the nature of the setting: boolean, integer, limited set of values (enumerations).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So, as a developer, you need to look at various guides and documentations (the core Quarkus and the extension specific ones)&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So Quarkus Tools provides content assist on those specific files that:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;validates the content of the application.properties files&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;provides you with the possible setting names and values&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s see it in action.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Go to &lt;strong&gt;src/main/resources/application.properties&lt;/strong&gt; in the project and right click and select &lt;strong&gt;Open With → Generic Text Editor&lt;/strong&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus16.png" alt="quarkus16" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Go the third line of the file and invoke code completion (Ctrl + Space):&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus17.png" alt="quarkus17" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For each setting, a documentation is displayed when you mouse over the setting. Let try to add &lt;strong&gt;quarkus.http.port&lt;/strong&gt; to the file and mouse over this name:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus18.png" alt="quarkus18" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If we enter a wrong value (false instead of a numeric value), then the error will be highlighted:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus19.png" alt="quarkus19" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is the first set of features that will be integration into the next version of JBoss Tools. We encourage you to used it and if you are missing features and/or enhancements, don’t hesitate to report them here: &lt;a href="https://issues.redhat.com/issues/?jql=project%20%3D%20JBIDE%20AND%20component%20%3D%20quarkus%20and%20status%20!%3D%20Closed%20and%20status%20!%3D%20Resolved%20"&gt;JBoss Tools issue tracker&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="hibernate-runtime-provider-updates"&gt;&lt;a class="anchor" href="#hibernate-runtime-provider-updates"&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.12.Final and Hibernate Tools version 5.4.12.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.15.Final and Hibernate Tools version 5.3.15.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="deprecation"&gt;&lt;a class="anchor" href="#deprecation"&gt;&lt;/a&gt;Deprecation&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Forge, Java Server Tools (JST) and Visual Page Editor (VPE) have been deprecated. Even though they received an update with this release, we have no plan to maintain or add new features and they may be removed in the future.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In addition, the adapters for Red Hat JBoss Enterprise Application Server 4.3 and 5.0 have also been deprecated.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="platform"&gt;&lt;a class="anchor" href="#platform"&gt;&lt;/a&gt;Platform&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;&lt;a class="anchor" href="#views-dialogs-and-toolbar"&gt;&lt;/a&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="new-view-menu-icon"&gt;&lt;a class="anchor" href="#new-view-menu-icon"&gt;&lt;/a&gt;New view menu icon&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The view menu chevron icon (▽) is replaced by a modern equivalent, the vertical ellipsis ( ⠇).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Almost every view has a menu that may contain additional configuration settings like filters, layout settings, and so on. The view menu was often overlooked and we expect that this change will help users to find it.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/view_menu.png" alt="view menu" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="find-actions-the-improved-quick-access"&gt;&lt;a class="anchor" href="#find-actions-the-improved-quick-access"&gt;&lt;/a&gt;Find Actions: The improved Quick Access&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The formerly called &lt;strong&gt;Quick Access&lt;/strong&gt; action has been retitled to &lt;strong&gt;Find Actions&lt;/strong&gt; to better emphasize its goal.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The related UI has changed a bit to improve its usage and accessibility:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The widget item is now a regular toolbar item (button-like)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An icon is shown&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Right-clicking on the tool item works and shows typical actions, including &lt;strong&gt;Hide&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The proposals are now a regular dialog, centered on the workbench&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;These changes will greatly improve the experience if you’re using a screen reader as it relies on a more standardized focus state. This also leverages all the default and usual accessibility features of dialogs (moveable, resizable…​).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Loading the proposals has been improved as well to avoid UI freezes when loading proposals.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="find-actions-finds-text-in-file-contents"&gt;&lt;a class="anchor" href="#find-actions-finds-text-in-file-contents"&gt;&lt;/a&gt;Find Actions finds text in file contents&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Find Actions&lt;/strong&gt; is now extended by the &lt;strong&gt;Quick Text Search&lt;/strong&gt; feature to show the potential text matches in file contents also in the proposals.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/file-content-find-action.png" alt="file content find action" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If the Quick Text Search bundle wasn’t started yet, you may miss those matches. In this case, you can use &lt;strong&gt;Find Actions&lt;/strong&gt; itself to activate the Quick Text Search by finding and selecting the &lt;strong&gt;Activate bundle for &amp;apos;File content&amp;apos;&lt;/strong&gt; proposals entry.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/activate-file-content.png" alt="activate file content" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="find-actions-lists-workspace-files"&gt;&lt;a class="anchor" href="#find-actions-lists-workspace-files"&gt;&lt;/a&gt;Find Actions lists workspace files&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Find Actions&lt;/strong&gt; can now list matching file names from the workspace (similar to the &lt;strong&gt;Open Resource&lt;/strong&gt; dialog). Upon selection the file is opened in the editor.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/find-actions-resources.png" alt="find actions resources" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="inline-rename-for-simple-resources-while-in-project-explorer"&gt;&lt;a class="anchor" href="#inline-rename-for-simple-resources-while-in-project-explorer"&gt;&lt;/a&gt;Inline rename for simple resources while in Project Explorer.&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;strong&gt;Project Explorer&lt;/strong&gt;, renaming (with the &lt;code&gt;&lt;code&gt;F2&lt;/code&gt;&lt;/code&gt; shortcut or Rename context menu) will start an inline rename for normal resources when other files aren’t affected by the rename.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/project-explorer-inline-renaming.png" alt="project explorer inline renaming" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In cases where other files are affected by the rename, or the rename operation is customized, the rename dialog will appear as it previously did.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="text-editors"&gt;&lt;a class="anchor" href="#text-editors"&gt;&lt;/a&gt;Text Editors&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="show-problem-markers-inline"&gt;&lt;a class="anchor" href="#show-problem-markers-inline"&gt;&lt;/a&gt;Show problem markers inline&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now see the &lt;strong&gt;errors, warnings, and info markers&lt;/strong&gt; inline in most of the text editors. No more mousing around to see the actual error message!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/annotation-code-mining-jdt.png" alt="annotation code mining jdt" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can see the available quick fixes by clicking on the message.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/annotation-code-mining-quickfix.png" alt="annotation code mining quickfix" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can enable it on the &lt;strong&gt;General &amp;gt; Editors &amp;gt; Text Editors&lt;/strong&gt; preference page and set &lt;strong&gt;Show Code Minings for Annotations&lt;/strong&gt; to:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;None (default)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Errors only&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Errors and Warnings&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Errors, Warnings and Info&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="backspace-delete-can-treat-spaces-as-tabs"&gt;&lt;a class="anchor" href="#backspace-delete-can-treat-spaces-as-tabs"&gt;&lt;/a&gt;Backspace/delete can treat spaces as tabs&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you use the &lt;strong&gt;Insert spaces for tabs&lt;/strong&gt; option, now you can also change the backspace and delete keys behavior to remove multiple spaces at once, as if they were a tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The new setting is called &lt;strong&gt;Remove multiple spaces on backspace/delete&lt;/strong&gt; and is found on the &lt;strong&gt;General &amp;gt; Editors &amp;gt; Text Editors&lt;/strong&gt; preference page.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/delete-spaces-as-tabs.png" alt="delete spaces as tabs" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug"&gt;&lt;a class="anchor" href="#debug"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="collapse-all-button-in-the-debug-view"&gt;&lt;a class="anchor" href="#collapse-all-button-in-the-debug-view"&gt;&lt;/a&gt;Collapse All Button in the Debug View&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;strong&gt;Debug&lt;/strong&gt; View, now you can now use the new &lt;strong&gt;Collapse All&lt;/strong&gt; button to collapse all the launches.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Before collapsing:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/collapse-all-debug-view-before.png" alt="collapse all debug view before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;After collapsing:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/collapse-all-debug-view-after.png" alt="collapse all debug view after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="control-character-interpretation-in-console-view"&gt;&lt;a class="anchor" href="#control-character-interpretation-in-console-view"&gt;&lt;/a&gt;Control character interpretation in Console View&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Console&lt;/strong&gt; View can now interpret the control characters backslash (&lt;code&gt;&lt;code&gt;\b&lt;/code&gt;&lt;/code&gt;) and carriage return (&lt;code&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This feature is disabled by default. You can enable it on the &lt;strong&gt;Run/Debug &amp;gt; Console&lt;/strong&gt; preference page.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/animated-progress-in-console.gif" alt="animated progress in console" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="themes-and-styling"&gt;&lt;a class="anchor" href="#themes-and-styling"&gt;&lt;/a&gt;Themes and Styling&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="improvements-in-ui-forms-styling"&gt;&lt;a class="anchor" href="#improvements-in-ui-forms-styling"&gt;&lt;/a&gt;Improvements in UI Forms Styling&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;CSS customization of &lt;code&gt;&lt;code&gt;ExpandableComposite&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;Section&lt;/code&gt;&lt;/code&gt; was reworked to give you more control over their styling. In dark mode, those elements now integrate better with other Form elements.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Old:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/pom_dark_old.png" alt="pom dark old" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;New:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/pom_dark_new.png" alt="pom dark new" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="perspective-switcher-gets-aligned-with-normal-toolbar-styling"&gt;&lt;a class="anchor" href="#perspective-switcher-gets-aligned-with-normal-toolbar-styling"&gt;&lt;/a&gt;Perspective switcher gets aligned with normal toolbar styling&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The special styling of the &lt;strong&gt;Perspective switcher&lt;/strong&gt; has been removed to make the Toolbar look consistent. This also reduces OS specific styling issues with the perspective switcher.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Old:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/old-perspective-switcher.png" alt="old perspective switcher" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;New:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/new-perspective-switcher.png" alt="new perspective switcher" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="usage-of-consistent-colors-for-the-dark-theme"&gt;&lt;a class="anchor" href="#usage-of-consistent-colors-for-the-dark-theme"&gt;&lt;/a&gt;Usage of consistent colors for the dark theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The usage of different shades of gray in the dark theme was reduced.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The styling of the widgets is also not based on the selected view anymore, which makes the UI more consistent.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="general-updates"&gt;&lt;a class="anchor" href="#general-updates"&gt;&lt;/a&gt;General Updates&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="ant-1-10-7"&gt;&lt;a class="anchor" href="#ant-1-10-7"&gt;&lt;/a&gt;Ant 1.10.7&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse has adopted Ant version 1.10.7.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="support-for-the-ant-include-task-added"&gt;&lt;a class="anchor" href="#support-for-the-ant-include-task-added"&gt;&lt;/a&gt;Support for the Ant include task added&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Ant &lt;code&gt;&lt;code&gt;include&lt;/code&gt;&lt;/code&gt; task (available in the Ant library since 1.8.0) is now fully recognized by the ant-ui-plugin and validated accordingly.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="java-developement-tools-jdt"&gt;&lt;a class="anchor" href="#java-developement-tools-jdt"&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-13-support"&gt;&lt;a class="anchor" href="#java-13-support"&gt;&lt;/a&gt;Java 13 Support&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="java-13"&gt;&lt;a class="anchor" href="#java-13"&gt;&lt;/a&gt;Java 13&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Java™ 13 is available and Eclipse JDT supports Java 13 for the Eclipse 4.14 release.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The release notably includes the following Java 13 features:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;JEP 354: Switch Expressions (Preview).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 355: Text Blocks (Preview).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please note that these are preview language feature and hence enable preview option should be on. For an informal introduction of the support, please refer to &lt;a href="https://wiki.eclipse.org/Java13/Examples"&gt;Java 13 Examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="keyboard-shortcut-for-text-block-creation"&gt;&lt;a class="anchor" href="#keyboard-shortcut-for-text-block-creation"&gt;&lt;/a&gt;Keyboard shortcut for Text Block creation&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A keyboard shortcut &lt;strong&gt;Ctrl + Shift + &amp;apos;&lt;/strong&gt; is added in the Java Editor for &lt;strong&gt;text blocks&lt;/strong&gt;, which is a preview feature added in Java 13.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Conditions under which this keyboard shortcut works are:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The Java Project should have a compliance of 13 or above and the preview features should be enabled.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The selection in the editor should not be part of a string or a comment or a text block.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Examples:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-pre-creation1.png" alt="textblock pre creation1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Pressing the shortcut gives:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-post-creation1.png" alt="textblock post creation1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can also encompass a selected text in text block as below:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-pre-creation2.png" alt="textblock pre creation2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On pressing the shortcut, you get this:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/textblock-post-creation2.png" alt="textblock post creation2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-editor"&gt;&lt;a class="anchor" href="#java-editor"&gt;&lt;/a&gt;Java Editor&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="remove-unnecessary-array-creation"&gt;&lt;a class="anchor" href="#remove-unnecessary-array-creation"&gt;&lt;/a&gt;Remove unnecessary array creation&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new cleanup action &lt;strong&gt;Remove unnecessary array creation&lt;/strong&gt; has been added. It will remove explicit array creation for &lt;code&gt;&lt;code&gt;varargs&lt;/code&gt;&lt;/code&gt; parameters.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-option.png" alt="unnecessary array creation option" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-before.png" alt="unnecessary array creation before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;After cleanup, you get this:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-after.png" alt="unnecessary array creation after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="push-negation-down-in-expression"&gt;&lt;a class="anchor" href="#push-negation-down-in-expression"&gt;&lt;/a&gt;Push negation down in expression&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new Java cleanup/save action &lt;strong&gt;Push down negation&lt;/strong&gt; has been added. It reduces the double negation by reverting the arithmetic expressions.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For instance:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;!!isValid;&lt;/code&gt; becomes &lt;code&gt;isValid;&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;!(a != b);&lt;/code&gt; becomes &lt;code&gt;(a == b);&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/push-down-negation.png" alt="push down negation" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="provide-templates-for-empty-java-source-files"&gt;&lt;a class="anchor" href="#provide-templates-for-empty-java-source-files"&gt;&lt;/a&gt;Provide templates for empty Java source files&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When dealing with empty Java source files, some basic templates (class, interface, enum) will now be available from the content assist popup.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/templates-empty-java-file.png" alt="templates empty java file" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="postfix-completion-proposal-category"&gt;&lt;a class="anchor" href="#postfix-completion-proposal-category"&gt;&lt;/a&gt;Postfix completion proposal category&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Postfix completion allows certain kinds of language constructs to be applied to the previously entered text.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For example: Entering &lt;code&gt;&lt;code&gt;&amp;quot;input text&amp;quot;.var&lt;/code&gt;&lt;/code&gt; and selecting the &lt;strong&gt;var - Creates a new variable&lt;/strong&gt; proposal, will result in &lt;code&gt;&lt;code&gt;String name = &amp;quot;input text&amp;quot;&lt;/code&gt;&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/postfix-completion.png" alt="postfix completion" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="try-with-resources-quickfix"&gt;&lt;a class="anchor" href="#try-with-resources-quickfix"&gt;&lt;/a&gt;try-with-resources quickfix&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quickfix has been added to create a &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; statement based on the selected lines. Lines that are selected must start with declarations of objects that implement &lt;code&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/code&gt;. These declarations are added as the resources of the &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; statement.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If there are selected statements that are not eligible resources (such as Objects that don’t implement &lt;code&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/code&gt;), then the first such statement and all the following selected statements will be placed in the &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; body.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Method before applying try-with-resources:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource1.png" alt="tryWithResource1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select all the lines inside the method, then use the short-cut &lt;strong&gt;Ctrl+1&lt;/strong&gt; and click on &lt;strong&gt;Surround with try-with-resources&lt;/strong&gt; from the list:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource2.png" alt="tryWithResource2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This results in:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource3.png" alt="tryWithResource3" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="javadoc-tag-checking-for-modules"&gt;&lt;a class="anchor" href="#javadoc-tag-checking-for-modules"&gt;&lt;/a&gt;Javadoc tag checking for modules&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Support has been added to check the Javadoc of a module-info.java file to report missing and duplicate &lt;code&gt;&lt;code&gt;@uses&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;@provides&lt;/code&gt;&lt;/code&gt; tags depending on the compiler settings (&lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Compiler &amp;gt; Javadoc&lt;/strong&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/checkModuleJavadoc.png" alt="checkModuleJavadoc" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-formatter"&gt;&lt;a class="anchor" href="#java-formatter"&gt;&lt;/a&gt;Java Formatter&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="formatting-of-text-blocks"&gt;&lt;a class="anchor" href="#formatting-of-text-blocks"&gt;&lt;/a&gt;Formatting of text blocks&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The code formatter can now handle &lt;strong&gt;text blocks&lt;/strong&gt;, which is a preview feature added in Java 13. It’s controlled by the &lt;strong&gt;Text block indentation&lt;/strong&gt; setting, found right in the &lt;strong&gt;Indentation&lt;/strong&gt; section of the &lt;strong&gt;Profile Editor (Preferences &amp;gt; Java &amp;gt; Code Style &amp;gt; Formatter &amp;gt; Edit…​&lt;/strong&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default, text block lines are indented the same way as wrapped code lines, that is with two extra tabs relative to the starting indentation (or whatever is set as &lt;strong&gt;Default indentation for wrapped lines&lt;/strong&gt; in the &lt;strong&gt;Line Wrapping&lt;/strong&gt; section). You can also set it to use only one tab for indentation (&lt;strong&gt;Indent by one&lt;/strong&gt;), align all lines to the position of the opening quotes (&lt;strong&gt;Indent on column&lt;/strong&gt;), or preserve the original formatting (&lt;strong&gt;Do not touch&lt;/strong&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/formatter-text-block.png" alt="formatter text block" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="blank-lines-between-javadoc-tags"&gt;&lt;a class="anchor" href="#blank-lines-between-javadoc-tags"&gt;&lt;/a&gt;Blank lines between Javadoc tags&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The code formatter can now divide Javadoc tags into groups (by type, for example &lt;code&gt;&lt;code&gt;@param&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;@throws&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;@returns&lt;/code&gt;&lt;/code&gt;) and separate these groups with blank lines. This feature can be turned on in the &lt;strong&gt;Comments &amp;gt; Javadocs&lt;/strong&gt; section by checking the &lt;strong&gt;Blank lines between tags of different type&lt;/strong&gt; box.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="space-after-not-operator"&gt;&lt;a class="anchor" href="#space-after-not-operator"&gt;&lt;/a&gt;Space after not operator&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new setting has been added to control whether a space should be added &lt;strong&gt;after not (&lt;code&gt;&lt;code&gt;!&lt;/code&gt;&lt;/code&gt;) operator&lt;/strong&gt;, independently from other unary operators. To find it, expand sections &lt;strong&gt;Whitespace &amp;gt; Expressions &amp;gt; Unary&lt;/strong&gt; operators and go to the last checkbox.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/formatter-space-after-not.png" alt="formatter space after not" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="junit"&gt;&lt;a class="anchor" href="#junit"&gt;&lt;/a&gt;JUnit&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="bree-update-for-org-eclipse-jdt-junit-runtime"&gt;&lt;a class="anchor" href="#bree-update-for-org-eclipse-jdt-junit-runtime"&gt;&lt;/a&gt;BREE update for org.eclipse.jdt.junit.runtime&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Bundle Required Execution Environment (BREE) for the &lt;code&gt;&lt;code&gt;org.eclipse.jdt.junit.runtime&lt;/code&gt;&lt;/code&gt; bundle is now J2SE-1.5.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug-2"&gt;&lt;a class="anchor" href="#debug-2"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="no-suspending-on-exception-recurrence"&gt;&lt;a class="anchor" href="#no-suspending-on-exception-recurrence"&gt;&lt;/a&gt;No suspending on exception recurrence&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new workspace preference has been added for exception breakpoints: &lt;strong&gt;Suspend policy for recurring exception instances&lt;/strong&gt; controls whether the same exception instance may cause the debugger to suspend more than once.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/preference-exception-recurrence.png" alt="preference exception recurrence" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This option is relevant when debugging an application that has &lt;code&gt;&lt;code&gt;try&lt;/code&gt;&lt;/code&gt; blocks at several levels of the architecture. In this situation an exception breakpoint may fire multiple times for the same actual exception instance: A &lt;code&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/code&gt; statement inside a &lt;code&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/code&gt; block may re-throw the same exception. The same holds for each &lt;code&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/code&gt; block or &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; block.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When the debugger stops due to an exception breakpoint, you may want to continue your debug session by pressing &lt;strong&gt;Resume (F8)&lt;/strong&gt;, but all that catching and re-throwing will force you to observe all locations where the same exception will surface again and again. Suspending at all &lt;code&gt;&lt;code&gt;try&lt;/code&gt;&lt;/code&gt; blocks on the call stack may also spoil your context of open Java editors, by opening more editors of classes that are likely irrelevant for the debugging task at hand.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;JDT Debugger&lt;/strong&gt; will now detect this situation, and the first time it notices the same exception instance recurring at the surface, a new question dialog is shown:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.14/images/dialog-exception-recurrence.png" alt="dialog exception recurrence" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you select &lt;strong&gt;Skip&lt;/strong&gt; in this dialog, the current exception instance will be dismissed for good. Still, new instances of the same exception type will cause suspending when they are thrown.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you check &lt;strong&gt;Remember my decision&lt;/strong&gt; your choice will be stored in the mentioned workspace preference to be effective for all exception breakpoints.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Even after choosing &lt;strong&gt;Skip&lt;/strong&gt; — resp. &lt;strong&gt;Only once&lt;/strong&gt; in the preferences — you can have the old behavior simply by pressing &lt;strong&gt;Step Return (F7)&lt;/strong&gt; instead of &lt;strong&gt;Resume&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="jdt-developers"&gt;&lt;a class="anchor" href="#jdt-developers"&gt;&lt;/a&gt;JDT Developers&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="flag-whether-content-assist-extension-needs-to-run-in-ui-thread"&gt;&lt;a class="anchor" href="#flag-whether-content-assist-extension-needs-to-run-in-ui-thread"&gt;&lt;/a&gt;Flag whether content assist extension needs to run in UI thread&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The existing &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalComputer&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javadocCompletionProposalComputer&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalSorters&lt;/code&gt;&lt;/code&gt; extension points now allow a new attribute &lt;strong&gt;requiresUIThread&lt;/strong&gt; that allows a developer to declare whether running in the UI thread is required or not.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This information will be used by the &lt;strong&gt;Content Assist&lt;/strong&gt; operation to allow some optimizations and prevent UI freezes by reducing the amount of work happening in the UI thread.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To preserve backward compatibility, the default value for this attribute (if unset) is &lt;code&gt;&lt;code&gt;true&lt;/code&gt;&lt;/code&gt;, meaning the extension is expected to run in the UI thread.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="and-more"&gt;&lt;a class="anchor" href="#and-more"&gt;&lt;/a&gt;And more…​&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.14.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-next"&gt;&lt;a class="anchor" href="#what-is-next"&gt;&lt;/a&gt;What is next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Having JBoss Tools 4.14.0 and Red Hat CodeReady Studio 12.14 out we are already working on the next release for Eclipse 2020-03.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7YmPI72ipYY" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.14.0 and Red Hat CodeReady Studio 12.14 for Eclipse 2019-12 are here waiting for you. Check it out! Installation Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our Red Hat CodeReady product page and run it like this: java -jar codereadystudio-&lt;installername&gt;.jar JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more: This release requires at least Eclipse 4.14 (2019-12) but we recommend using the latest Eclipse 4.14 2019-12 JEE Bundle since then you get most of the dependencies preinstalled. Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under "JBoss Tools" or "Red Hat CodeReady...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2020-03-17T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/12.14.0.ga.html</feedburner:origLink></entry><entry><title>Business Modeler Preview Now Available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5drn-tDqeto/business-modeler-preview-now-available.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>porcelli</name></author><id>searchisko:content:id:jbossorg_blog-business_modeler_preview_now_available</id><updated>2020-03-16T14:58:37Z</updated><published>2020-03-16T14:56:00Z</published><content type="html">(originally posted &lt;a href="https://porcelli.me/announcement/tooling/online/bpmn/dmn/2020/03/12/online-new-editors.html" target="_blank"&gt;here&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Today we have a new exciting announcement for business automation developers and users. The KIE group team is releasing a preview version of the DMN and BPMN editors online! Once again, kudos for everyone involved.&lt;br /&gt;&lt;br /&gt;This online experience is perfect for getting access to the editors without any local setup quickly. Users and developers can take advantage of it to get familiar with BPMN and DMN standards, to sketch ideas, or even to create fully-functional models.&lt;br /&gt;&lt;br /&gt;&lt;img alt="preview-online" src="https://porcelli.me/images/blog/preview-online.png" style="border: 0px; box-sizing: border-box; color: #334455; display: block; font-family: roboto, sans-serif; font-size: 16px; height: auto; margin-left: auto; margin-right: auto; max-width: 100%; vertical-align: middle;" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;&lt;span style="font-size: x-large;"&gt;Quick tour&lt;/span&gt;&lt;/h2&gt;We’ve been experimenting with the idea of an online presence for &lt;a href="https://medium.com/kie-foundation/kogito-online-editor-is-available-now-77fe2d7d8673" target="_blank"&gt;a while&lt;/a&gt;. After a few interactions, we consider that we’re ready to break the news, and here is a quick tour of the available features.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt; Samples&lt;/h3&gt;If you’re new to our editors or not much familiar with BPMN and DMN, the "Try Sample" link will provide you a real-world, fully functional example of both standards. You can change the sample and download your latest updates.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="https://porcelli.me/images/blog/try-sample.gif" style="border: 0px; box-sizing: border-box; color: #334455; display: block; font-family: roboto, sans-serif; font-size: 16px; height: auto; margin-left: auto; margin-right: auto; max-width: 100%; vertical-align: middle;" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The current online version of the editors doesn’t store the opened models anywhere, so all the changes are only available to your local browser session. In case you want to "save" your work, you’ll need to download it.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt; Uploading Models&lt;/h3&gt;In case you have downloaded your work-in-progress model, you can upload it back to the online editor and get back to editing.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="https://porcelli.me/images/blog/upload-model.gif" style="border: 0px; box-sizing: border-box; color: #334455; display: block; font-family: roboto, sans-serif; font-size: 16px; height: auto; margin-left: auto; margin-right: auto; max-width: 100%; vertical-align: middle;" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt; Open from source code&lt;/h3&gt;This mechanism allows users to open a model from an external source; an example of this would be raw git access to a model. Note that you can use the URL generated in your browser to share the model.&lt;br /&gt;&lt;br /&gt;&lt;img src="https://porcelli.me/images/blog/open-from-source.gif" style="border: 0px; box-sizing: border-box; color: #334455; display: block; font-family: roboto, sans-serif; font-size: 16px; height: auto; margin-left: auto; margin-right: auto; max-width: 100%; vertical-align: middle;" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h4&gt; Sharing links from GitHub&lt;/h4&gt;If you have the latest GitHub extension installed, while browsing a GitHub repository and you find a BPMN or a DMN model, you’ll see an icon that will open the model in the online editor. You can also share the created link.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="https://porcelli.me/images/blog/github-open-on-online.gif" style="border: 0px; box-sizing: border-box; color: #334455; display: block; font-family: roboto, sans-serif; font-size: 16px; height: auto; margin-left: auto; margin-right: auto; max-width: 100%; vertical-align: middle;" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;&lt;span style="font-size: x-large;"&gt; What about new models? Glad you asked…​&lt;/span&gt;&lt;/h2&gt;&lt;br /&gt;So far, I’ve covered multiple ways to use the editors with existing models, but what about creating new models? Of course, we have a pair of "Create new" buttons that you’re redirected to the editors.&lt;br /&gt;&lt;br /&gt;However, this is not exactly the best or most natural way to start a new model…​&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="https://porcelli.me/images/blog/create-new-model.gif" style="border: 0px; box-sizing: border-box; color: #334455; display: block; font-family: roboto, sans-serif; font-size: 16px; height: auto; margin-left: auto; margin-right: auto; max-width: 100%; vertical-align: middle;" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;&lt;span style="font-size: x-large;"&gt; Introducing DMN.new and BPMN.new&lt;/span&gt;&lt;/h2&gt;Today we’re also making publicly available the preview of &lt;a href="https://dmn.new/" target="_blank"&gt;DMN.new&lt;/a&gt; and &lt;a href="https://bpmn.new/" target="_blank"&gt;BPMN.new&lt;/a&gt;!&lt;br /&gt;&lt;br /&gt;The .new domain is a new initiative from Google to create new digital assets online. Other .new domains are &lt;a href="https://docs.new/" target="_blank"&gt;docs.new&lt;/a&gt;, &lt;a href="https://sheets.new/" target="_blank"&gt;sheets.new&lt;/a&gt;, &lt;a href="https://slides.new/" target="_blank"&gt;slides.new&lt;/a&gt;, &lt;a href="https://playlist.new/" target="_blank"&gt;playlist.new&lt;/a&gt;, and many more. To learn more about the .new domains, check this page &lt;a href="https://whats.new/" target="_blank"&gt;whats.new&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;There’s not much more to say about it, other than now you can type &lt;a href="https://dmn.new/" target="_blank"&gt;DMN.new&lt;/a&gt; and &lt;a href="https://bpmn.new/" target="_blank"&gt;BPMN.new&lt;/a&gt; on any browser URL bar, and you’ll be able to create new models without any additional steps! Here’s a quick video to show how simple it is.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="https://porcelli.me/images/blog/dot-new.gif" style="border: 0px; box-sizing: border-box; color: #334455; display: block; font-family: roboto, sans-serif; font-size: 16px; height: auto; margin-left: auto; margin-right: auto; max-width: 100%; vertical-align: middle;" /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;&lt;span style="font-size: x-large;"&gt; There’s more, much more…​&lt;/span&gt;&lt;/h2&gt;&lt;br /&gt;This new generation of KIE group tooling is keeping setting the bar higher, and we won’t stop here…​ we have more to come.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Stay tuned!&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=CZhRlzQDp00:039mQUECr0o:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=CZhRlzQDp00:039mQUECr0o:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=CZhRlzQDp00:039mQUECr0o:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=CZhRlzQDp00:039mQUECr0o:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=CZhRlzQDp00:039mQUECr0o:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=CZhRlzQDp00:039mQUECr0o:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=CZhRlzQDp00:039mQUECr0o:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=CZhRlzQDp00:039mQUECr0o:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=CZhRlzQDp00:039mQUECr0o:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=CZhRlzQDp00:039mQUECr0o:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/CZhRlzQDp00" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5drn-tDqeto" height="1" width="1" alt=""/&gt;</content><summary>(originally posted here) Today we have a new exciting announcement for business automation developers and users. The KIE group team is releasing a preview version of the DMN and BPMN editors online! Once again, kudos for everyone involved. This online experience is perfect for getting access to the editors without any local setup quickly. Users and developers can take advantage of it to get famili...</summary><dc:creator>porcelli</dc:creator><dc:date>2020-03-16T14:56:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/CZhRlzQDp00/business-modeler-preview-now-available.html</feedburner:origLink></entry><entry><title>Extending gdbserver to support an strace client</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RiqOHoMnlXk/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gdb" scheme="searchisko:content:tags" /><category term="gdbserver" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="strace" scheme="searchisko:content:tags" /><category term="system calls" scheme="searchisko:content:tags" /><author><name>Stan Cox</name></author><id>searchisko:content:id:jbossorg_blog-extending_gdbserver_to_support_an_strace_client</id><updated>2020-03-16T07:00:52Z</updated><published>2020-03-16T07:00:52Z</published><content type="html">&lt;p&gt;The &lt;code&gt;strace&lt;/code&gt; command traces system calls and signals, deciding them and their corresponding arguments into a symbolic form. A frequent debugging request from developers is the ability to allow &lt;code&gt;strace&lt;/code&gt; to trace system calls for a program that is also being debugged by GDB, like this:&lt;/p&gt; &lt;pre&gt;% gdb --args test-program (gdb) b main Breakpoint 1 at 0x40128e: file test-program.c, line 22. (gdb) run Starting program: test-program Breakpoint 1, main (argc=3, argv=0x7fffffffdb98) at test-program.c:22 22 int thread_count = 2; (gdb)&lt;/pre&gt; &lt;p&gt;In another terminal window, we invoke &lt;code&gt;strace&lt;/code&gt; on the same process GDB is debugging:&lt;/p&gt; &lt;pre&gt;% strace -p $(pgrep -f test-program) strace: attach: ptrace(PTRACE_SEIZE, 27882): Operation not permitted&lt;/pre&gt; &lt;p&gt;The culprit here is that the &lt;code&gt;ptrace&lt;/code&gt; system call, which is used by both GDB and &lt;code&gt;strace&lt;/code&gt; to control the execution of programs, and does not allow both &lt;code&gt;strace&lt;/code&gt; and GDB to control the same process.&lt;/p&gt; &lt;p&gt;&lt;span id="more-688227"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;One solution is to use &lt;code&gt;gdbserver&lt;/code&gt; to support both the &lt;code&gt;gdb&lt;/code&gt; client and the &lt;code&gt;strace&lt;/code&gt; client.&lt;/p&gt; &lt;h2&gt;Extending &lt;code&gt;strace&lt;/code&gt; to support &lt;code&gt;gdbserver&lt;/code&gt;&lt;/h2&gt; &lt;p&gt;The first step in this process is to extend &lt;code&gt;strace&lt;/code&gt; to support &lt;code&gt;gdbserver&lt;/code&gt;. The &lt;code&gt;strace&lt;/code&gt; command is implemented using the &lt;code&gt;ptrace&lt;/code&gt; call to intercept system calls. Gdbserver is also able to intercept system calls. To enable &lt;code&gt;strace&lt;/code&gt; to use &lt;code&gt;gdbserver&lt;/code&gt;, it is necessary to add a new back end that uses &lt;code&gt;gdbserver&lt;/code&gt; instead of &lt;code&gt;ptrace&lt;/code&gt; to do the system call interception. This &lt;code&gt;gdbserver&lt;/code&gt; back end provides similar functionality to the &lt;code&gt;ptrace&lt;/code&gt; back end.&lt;/p&gt; &lt;p&gt;Now, let&amp;#8217;s look at some examples.&lt;/p&gt; &lt;h3&gt;Example of &lt;code&gt;strace&lt;/code&gt; using a &lt;code&gt;gdbserver&lt;/code&gt;&lt;/h3&gt; &lt;p&gt;An example of running &lt;code&gt;strace&lt;/code&gt; with an alternative &lt;code&gt;gdbserver&lt;/code&gt; back end is:&lt;/p&gt; &lt;pre&gt;% strace -G '|/usr/bin/gdbserver --once --multi stdio' test-program&lt;/pre&gt; &lt;p&gt;This example says to:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Connect to &lt;code&gt;gdbserver&lt;/code&gt; using the &lt;code&gt;-G&lt;/code&gt; option.&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;gdbserver&lt;/code&gt; only once.&lt;/li&gt; &lt;li&gt;Communicate with strace with stdio.&lt;/li&gt; &lt;li&gt;Use gdbserver to trace &lt;code&gt;test-program&lt;/code&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;When run, the output provides (some output omitted):&lt;/p&gt; &lt;pre&gt;... [pid 15603] close(-1) = -1 EBADF (Bad file descriptor) [pid 15603] chroot(".") = -1 EPERM (Operation not permitted) [pid 15603] pipe([3, 4]) = 0 [pid 15603] write(4, "a\0", 2) = 2 [pid 15603] read(3, "a\0", 2) = 2 [pid 15603] madvise(0x7ffff75bb000, 8368128, MADV_DONTNEED) = 0 [pid 15595] --- stopped by 255 --- [pid 15595] +++ exited with 0 +++&lt;/pre&gt; &lt;h3&gt;Example of &lt;code&gt;strace&lt;/code&gt; using a standalone &lt;code&gt;gdbserver&lt;/code&gt;&lt;/h3&gt; &lt;p&gt;Alternately &lt;code&gt;strace&lt;/code&gt; can use a standalone &lt;code&gt;gdbserver&lt;/code&gt;:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Start &lt;code&gt;gdbserver&lt;/code&gt;: &lt;pre&gt;% gdbserver --multi :65432&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Second, start the &lt;code&gt;strace&lt;/code&gt; client and communicate with &lt;code&gt;gdbserver&lt;/code&gt; using the TCP port 65432.&lt;/li&gt; &lt;li&gt;Tell &lt;code&gt;strace&lt;/code&gt; to trace the test program: &lt;pre&gt;% strace -G localhost${i} test-program&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Example of &lt;code&gt;strace&lt;/code&gt; using a remote &lt;code&gt;gdbserver&lt;/code&gt;&lt;/h3&gt; &lt;p&gt;An example of running &lt;code&gt;strace&lt;/code&gt; with a standalone &lt;code&gt;gdbserver&lt;/code&gt; on a remote machine is to first start &lt;code&gt;gdbserver&lt;/code&gt; on the remote machine:&lt;/p&gt; &lt;pre&gt;% gdbserver --once :65432 test-program&lt;/pre&gt; &lt;p&gt;Second, start the &lt;code&gt;strace&lt;/code&gt; client and communicate with &lt;code&gt;gdbserver&lt;/code&gt; on the remote host using the TCP port given in the &lt;code&gt;gdbserver&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;% strace -G remote-host.org.com:65432&lt;/pre&gt; &lt;p&gt;Note that we give neither a &lt;code&gt;-p PID&lt;/code&gt; option nor a test program option. That information was specified by &lt;code&gt;gdbserver&lt;/code&gt;, and &lt;code&gt;strace&lt;/code&gt; will inherit that test program connection:&lt;/p&gt; &lt;pre&gt;... brk(NULL) = 0x63a000 arch_prctl(0x3001 /* ARCH_??? */, 0x7fffffffdb40) = -1 EINVAL (Invalid argument) --- stopped by 255 --- +++ exited with 0 +++&lt;/pre&gt; &lt;h2&gt;Extending &lt;code&gt;gdbserver&lt;/code&gt; to support both a &lt;code&gt;gdb&lt;/code&gt; and an &lt;code&gt;strace&lt;/code&gt; client&lt;/h2&gt; &lt;p&gt;Gdbserver currently handles a single client connection. To support both a &lt;code&gt;gdb&lt;/code&gt; and &lt;code&gt;strace&lt;/code&gt; client, it is necessary to enable &lt;code&gt;gdbserver&lt;/code&gt; to handle multiple client connections. To do this, &lt;code&gt;gdbserver&lt;/code&gt; must alternate between:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The &lt;code&gt;gdb&lt;/code&gt; client waits.&lt;/li&gt; &lt;li&gt;Gdbserver sends a &lt;code&gt;syscall&lt;/code&gt; packet to &lt;code&gt;strace&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Strace continues running via &lt;code&gt;gdbserver&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Gdbserver interacts with the &lt;code&gt;gdb&lt;/code&gt; client while the &lt;code&gt;strace&lt;/code&gt; client waits.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Gdbserver currently keeps state information for a single client. Making &lt;code&gt;gdbserver&lt;/code&gt; multiple client-aware requires adding state information for both the &lt;code&gt;gdb&lt;/code&gt; client and the &lt;code&gt;strace&lt;/code&gt; client—for example, the file descriptor for the connection and state information regarding the packets sent over the connection.&lt;/p&gt; &lt;p&gt;As is the case with time-sharing, one client will always be the active client. Client packet requests (continue, step, get memory, etc.) and the current client state (active or waiter) determine the client&amp;#8217;s next state. For instance:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;State:&lt;/strong&gt; GDB client is active, &lt;code&gt;strace&lt;/code&gt; client is waiting.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Request:&lt;/strong&gt; GDB client makes the next request over a syscall.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;State:&lt;/strong&gt; GDB client is waiting, &lt;code&gt;strace&lt;/code&gt; client is active.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Request:&lt;/strong&gt; Strace receives syscall and continues running via &lt;code&gt;gdbserver&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;State:&lt;/strong&gt; GDB client is active, &lt;code&gt;strace&lt;/code&gt; client is waiting.&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Example of a &lt;code&gt;gdbserver&lt;/code&gt; and &lt;code&gt;strace&lt;/code&gt; client&lt;/h3&gt; &lt;p&gt;This example says to start &lt;code&gt;gdbserver&lt;/code&gt; and use TCP port 65432 to communicate with clients:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Start &lt;code&gt;gdbserver&lt;/code&gt;:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;% gdbserver --multi :65432&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Do the following for GDB: &lt;ol type="a"&gt; &lt;li&gt;Start the &lt;code&gt;gdb&lt;/code&gt; client in another terminal window.&lt;/li&gt; &lt;li&gt;Tell GDB to communicate with the &lt;code&gt;gdbserver&lt;/code&gt; using the TCP port 65432.&lt;/li&gt; &lt;li&gt;Set a breakpoint and run the test program:&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 80px;"&gt;% gdb (gdb) file test-program (gdb) target extended-remote localhost:65432 (gdb) set remote exec-file test-program (gdb) b thread_worker (gdb) run (gdb) Thread 1 "test-program" hit Breakpoint 1, thread_worker () ... 52 pthread_barrier_wait (&amp;#38;barrier);&lt;/pre&gt; &lt;ol&gt; &lt;li&gt;Start the &lt;code&gt;strace&lt;/code&gt; client in another terminal window.&lt;/li&gt; &lt;li&gt;Do the following for &lt;code&gt;strace&lt;/code&gt;: &lt;ol type="a"&gt; &lt;li&gt;Tell &lt;code&gt;strace&lt;/code&gt; to communicate with &lt;code&gt;gdbserver&lt;/code&gt; using the TCP port 65432.&lt;/li&gt; &lt;li&gt;Tell strace to trace the test program that was started by the &lt;code&gt;gdb&lt;/code&gt; client. &lt;pre&gt;% strace -G localhost:65432 -p $(pgrep test-program)&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;The following would be displayed in the strace window: &lt;pre&gt;... brk(0x426000) = 0x426000&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;ol start="5"&gt; &lt;li&gt;&lt;strong&gt;[GDB window]&lt;/strong&gt; Tell the &lt;code&gt;gdb&lt;/code&gt; client to use thread two, set a breakpoint, and advance the test program:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;(gdb) thread 2 [Switching to thread 2 (Thread 7464.7490)] #0 thread_worker () at test-program.c:59 (gdb) b 52 (gdb) continue 59 close (-1); (gdb) next 61 chroot ("."); (gdb) next&lt;/pre&gt; &lt;ol start="6"&gt; &lt;li&gt;&lt;strong&gt;[Strace window] &lt;/strong&gt;Notice that &lt;code&gt;strace&lt;/code&gt; has traced the &lt;code&gt;close&lt;/code&gt; and &lt;code&gt;chroot&lt;/code&gt; system calls:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;[pid 7490] close(-1) = -1 EBADF (Bad file descriptor) [pid 7490] chroot(".") = -1 EPERM (Operation not permitted)&lt;/pre&gt; &lt;ol start="7"&gt; &lt;li&gt;&lt;strong&gt;[GDB window]&lt;/strong&gt; Advance the test program:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;(gdb) next 63 pipe (fd); (gdb) next 65 write (fd[1], buf1, sizeof (buf1)); (gdb) next 67 read (fd[0], buf2, sizeof (buf2)); (gdb) next&lt;/pre&gt; &lt;ol start="8"&gt; &lt;li&gt;&lt;strong&gt;[Strace window] &lt;/strong&gt;Notice that &lt;code&gt;strace&lt;/code&gt; has traced the &lt;code&gt;pipe&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, and &lt;code&gt;read&lt;/code&gt; calls:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;[pid 7490] pipe([3, 4]) = 0 [pid 7490] write(4, "a\0", 2) = 2 [pid 7490] read(3, "a\0", 2) = 2&lt;/pre&gt; &lt;ol start="9"&gt; &lt;li&gt;&lt;strong&gt;[GDB window]&lt;/strong&gt; Continue the test program to completion:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;(gdb) continue [Inferior 1 (process 7464) exited normally] (gdb) quit Remote connection closed&lt;/pre&gt; &lt;ol start="10"&gt; &lt;li&gt;&lt;strong&gt;[Strace window] &lt;/strong&gt;Notice that the attached process has exited:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;[pid 7490] madvise(0x7ffff7475000, 8368128, MADV_DONTNEED) = 0 [pid 7464] --- stopped by 255 --- [pid 7464] +++ exited with 0 +++ strace: Process 7490 detached&lt;/pre&gt; &lt;h2&gt;Current tool status&lt;/h2&gt; &lt;p&gt;Versions of the GDB remote protocol, &lt;code&gt;strace&lt;/code&gt;, and corresponding &lt;code&gt;gdbserver&lt;/code&gt; are currently under review. Initial versions of the &lt;code&gt;gdbserver&lt;/code&gt; and &lt;code&gt;strace&lt;/code&gt; tools are available for experimentation at &lt;a href="https://copr.fedorainfracloud.org/coprs/scox/gdbserver/" target="_blank" rel="noopener noreferrer"&gt;gdbserver_copr&lt;/a&gt; and &lt;a href="https://copr.fedorainfracloud.org/coprs/scox/strace/" target="_blank" rel="noopener noreferrer"&gt;strace_copr&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Extending &lt;code&gt;strace&lt;/code&gt; to additionally support &lt;code&gt;gdbserver&lt;/code&gt; provides an additional means to run &lt;code&gt;strace&lt;/code&gt;. For example, to trace a program that is running on a remote machine. Additionally, this extended &lt;code&gt;strace&lt;/code&gt;, along with a corresponding extended &lt;code&gt;gdbserver&lt;/code&gt;, enables tracing system calls in a program while a &lt;code&gt;gdb&lt;/code&gt; client is debugging the same program.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#38;linkname=Extending%20gdbserver%20to%20support%20an%20strace%20client" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#38;linkname=Extending%20gdbserver%20to%20support%20an%20strace%20client" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#38;linkname=Extending%20gdbserver%20to%20support%20an%20strace%20client" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#38;linkname=Extending%20gdbserver%20to%20support%20an%20strace%20client" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#38;linkname=Extending%20gdbserver%20to%20support%20an%20strace%20client" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#38;linkname=Extending%20gdbserver%20to%20support%20an%20strace%20client" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#38;linkname=Extending%20gdbserver%20to%20support%20an%20strace%20client" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F16%2Fextending-gdbserver-to-support-an-strace-client%2F&amp;#038;title=Extending%20gdbserver%20to%20support%20an%20strace%20client" data-a2a-url="https://developers.redhat.com/blog/2020/03/16/extending-gdbserver-to-support-an-strace-client/" data-a2a-title="Extending gdbserver to support an strace client"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/16/extending-gdbserver-to-support-an-strace-client/"&gt;Extending gdbserver to support an strace client&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RiqOHoMnlXk" height="1" width="1" alt=""/&gt;</content><summary>The strace command traces system calls and signals, deciding them and their corresponding arguments into a symbolic form. A frequent debugging request from developers is the ability to allow strace to trace system calls for a program that is also being debugged by GDB, like this: % gdb --args test-program (gdb) b main Breakpoint 1 at 0x40128e: file test-program.c, line 22. (gdb) run Starting progr...</summary><dc:creator>Stan Cox</dc:creator><dc:date>2020-03-16T07:00:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/16/extending-gdbserver-to-support-an-strace-client/</feedburner:origLink></entry><entry><title>Possible issues with debugging and inspecting compiler-optimized binaries</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DgRbErEMLWQ/" /><category term="compiler optimization" scheme="searchisko:content:tags" /><category term="debugging" scheme="searchisko:content:tags" /><category term="dwarf debug" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gdb" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="systemtap" scheme="searchisko:content:tags" /><author><name>William Cohen</name></author><id>searchisko:content:id:jbossorg_blog-possible_issues_with_debugging_and_inspecting_compiler_optimized_binaries</id><updated>2020-03-13T07:00:57Z</updated><published>2020-03-13T07:00:57Z</published><content type="html">&lt;p&gt;Developers think of their programs as a serial sequence of operations running as written in the original source code. However, program source code is just a specification for computations. The compiler analyzes the source code and determines if changes to the specified operations will yield the same visible results but be more efficient. It will eliminate operations that are ultimately not visible, and rearrange operations to extract more parallelism and hide latency. These differences between the original program&amp;#8217;s source code and the optimized binary that actually runs might be visible when inspecting the execution of the optimized binary via tools like GDB and SystemTap.&lt;/p&gt; &lt;p&gt;To aid with the debugging and instrumentation of binaries the compiler generates debug information to map between the source code and executable binary. The debug information includes which line of source code each machine instruction is associated with, where the variables are located, and how to unwind the stack to get a backtrace of function calls. However, even with the compiler generating this information, a number of non-intuitive effects might be observed when instrumenting a compiler-optimized binary:&lt;/p&gt; &lt;p&gt;&lt;span id="more-673227"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Expected probe points in code are missing.&lt;/li&gt; &lt;li&gt;Variable values might not be available at some locations.&lt;/li&gt; &lt;li&gt;A variable might have multiple values at a location.&lt;/li&gt; &lt;li&gt;Multiple variables have a mixture of old and new values existing at a location.&lt;/li&gt; &lt;li&gt;Multiple entirely different variables with the same name exist at a location.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These unexpected behaviors are some of the reasons that developers are encouraged to use &lt;code&gt;-Og&lt;/code&gt; rather than enabling compiler optimization with &lt;code&gt;-O2&lt;/code&gt; or &lt;code&gt;-O3&lt;/code&gt;. However, there are cases where developers might not have the option to recompile the code with more debugging-friendly options. Understanding why these situations happen might save you time and frustration when investigating a misbehaving program. Let&amp;#8217;s take a look.&lt;/p&gt; &lt;h2&gt;Missing probe points because lines are eliminated&lt;/h2&gt; &lt;p&gt;The binary code for a particular line of source code might be removed by the compiler because it has no effect on the later results. This removal might happen when the compiler data and control flow analysis for the function determines that while the code on the line is on a control flow path that could be executed, the values computed are never used. The debugging information that maps the instructions back to source code would have no entries for those eliminated lines. GDB and SystemTap would not be able to inspect the state of the program at those exact source code lines because they no longer exist in the binary.&lt;/p&gt; &lt;p&gt;These unexpected missing lines of source code might become more problematic when a function is inlined in multiple places: Some instances of the inlined function have a line optimized out, but other inlined versions keep that same line. This situation could lead to paths that should be instrumented being missed. SystemTap does have logic to place probe points near the missing line if the particular line isn&amp;#8217;t available, but in the case that there are instances of the line being included in the generated code, SystemTap might miss those other instances where the line was removed.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/DWARF" target="_blank" rel="noopener noreferrer"&gt;DWARF&lt;/a&gt; debug information specification includes a flag marking the start of a basic block that can help identify the other nearby lines on a per basic block basis. However, in the generated code examined so far, this flag doesn&amp;#8217;t seem to ever be set by the GCC or Clang compilers.&lt;/p&gt; &lt;h2&gt;The value for a variable might not exist at a point in the code&lt;/h2&gt; &lt;p&gt;Compilers try to be efficient and store values in places that have the lowest cost to access. On modern processors, the registers can be accessed with the least amount of delay. However, on most processors, there are only a limited number of registers to store values, making them a scarce resource.&lt;/p&gt; &lt;p&gt;The compiler register&amp;#8217;s allocation code attempts to maximize register utilization using the same registers to hold different variables at different times. The compiler may determine that a value for a variable is no longer used at one point in the binary and reuse the register to hold another variable, and that old variable value is lost once the new variable is written. Thus, a particular variable might not have any value available at a particular location in the machine code.&lt;/p&gt; &lt;h2&gt;Multiple values for a particular variable might exist at a probe point&lt;/h2&gt; &lt;p&gt;Developers might reuse a single variable to hold values that are not dependent on each other at different places in a function. The compiler might reorder the operations related to that variable in the binary so that those multiple values are live at the same time, in order to make use of the processor&amp;#8217;s ability to execute instructions in parallel or move operations earlier so they do not delay later dependent operations.&lt;/p&gt; &lt;p&gt;This effect might occur with the local variables of a function inlined multiple times in another function. The instructions for the multiple instances of the inline functions are reordered so that the different instances of the local variable from the inlined function are live at the same time. This effect might also happen with loop unrolling, where multiple iterations of a loop are scheduled together. The local variable &lt;code&gt;a&lt;/code&gt; for iteration &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;+1, &lt;code&gt;i&lt;/code&gt;+2, and &lt;code&gt;i&lt;/code&gt;+3 might all have values at the same point in the binary. With aggressive vectorization, this issue might become more common.&lt;/p&gt; &lt;h2&gt;Values for multiple variables might not be in a coherent state at a particular location&lt;/h2&gt; &lt;p&gt;As mentioned earlier, the compiler might interleave or change the order of operations. Below is a simple example one might want to probe on the line that computes &lt;code&gt;d&lt;/code&gt;, with the expectation that the current value of &lt;code&gt;a&lt;/code&gt; will be available:&lt;/p&gt; &lt;pre&gt;a = b + c /* source line 1 */ d = e * f /* source line 2 */ g = d + a /* source line 3 */&lt;/pre&gt; &lt;p&gt;However, the compiler might reorder the operations like the code below in order to provide more time between the calculation of &lt;code&gt;d&lt;/code&gt; and its use to compute &lt;code&gt;g&lt;/code&gt;. If the programmer inspects values immediately after running line two, the value of &lt;code&gt;d&lt;/code&gt; is available, but the value for &lt;code&gt;a&lt;/code&gt; has not been computed (unlike the original source code above):&lt;/p&gt; &lt;pre&gt;d = e * f /* source line 2 */ a = b + c /* source line 1 */ g = d + a /* source line 3 */&lt;/pre&gt; &lt;h2&gt;Completely different variables with the same name&lt;/h2&gt; &lt;p&gt;There may be multiple variables with the same name at a location in the executable. How many times have you seen the variable &lt;code&gt;i&lt;/code&gt; used as a loop iteration variable and &lt;code&gt;p&lt;/code&gt; used for pointers? For example, the variable used as an argument for a function call might be the same name as the parameter for an inlined function, or the inline function might have local variable names that are the same as the calling function. This setup could lead to confusion as to which function&amp;#8217;s variable &lt;code&gt;i&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt; you are examining.&lt;/p&gt; &lt;h2&gt;Debugging is hard&lt;/h2&gt; &lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Brian_Kernighan" target="_blank" rel="noopener noreferrer"&gt;Brian Kernighan&lt;/a&gt; wrote in &lt;i&gt;The Elements of Programming Style&lt;/i&gt;, 2nd edition, Chapter 2:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Now, with clever compilers, debugging can be even harder! Make the code as simple as possible and consider using these &lt;a href="https://developers.redhat.com/blog/2018/05/14/making-the-operation-of-code-more-transparent-and-obvious/" target="_blank" rel="noopener noreferrer"&gt;techniques to make the code more transparent and obvious&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#38;linkname=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#38;linkname=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#38;linkname=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#38;linkname=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#38;linkname=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#38;linkname=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#38;linkname=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F13%2Fpossible-issues-with-debugging-and-inspecting-compiler-optimized-binaries%2F&amp;#038;title=Possible%20issues%20with%20debugging%20and%20inspecting%20compiler-optimized%20binaries" data-a2a-url="https://developers.redhat.com/blog/2020/03/13/possible-issues-with-debugging-and-inspecting-compiler-optimized-binaries/" data-a2a-title="Possible issues with debugging and inspecting compiler-optimized binaries"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/13/possible-issues-with-debugging-and-inspecting-compiler-optimized-binaries/"&gt;Possible issues with debugging and inspecting compiler-optimized binaries&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DgRbErEMLWQ" height="1" width="1" alt=""/&gt;</content><summary>Developers think of their programs as a serial sequence of operations running as written in the original source code. However, program source code is just a specification for computations. The compiler analyzes the source code and determines if changes to the specified operations will yield the same visible results but be more efficient. It will eliminate operations that are ultimately not visible...</summary><dc:creator>William Cohen</dc:creator><dc:date>2020-03-13T07:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/13/possible-issues-with-debugging-and-inspecting-compiler-optimized-binaries/</feedburner:origLink></entry><entry><title>How to customize Fedora CoreOS for dedicated workloads with OSTree</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OL1euA4-byc/" /><category term="buildah" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="coreos" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="immutable" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Podman" scheme="searchisko:content:tags" /><category term="rpm-ostree" scheme="searchisko:content:tags" /><author><name>Gianni Salinetti</name></author><id>searchisko:content:id:jbossorg_blog-how_to_customize_fedora_coreos_for_dedicated_workloads_with_ostree</id><updated>2020-03-12T07:00:21Z</updated><published>2020-03-12T07:00:21Z</published><content type="html">&lt;p&gt;In &lt;a href="https://developers.redhat.com/blog/2020/03/10/how-to-run-containerized-workloads-securely-and-at-scale-with-fedora-coreos/" target="_blank" rel="noopener noreferrer"&gt;part one of this series&lt;/a&gt;, I introduced &lt;a href="https://getfedora.org/en/coreos/" target="_blank" rel="noopener noreferrer"&gt;Fedora CoreOS&lt;/a&gt; (and &lt;a href="http://coreos.com/" target="_blank" rel="noopener noreferrer"&gt;Red Hat CoreOS&lt;/a&gt;) and explained why its immutable and atomic nature is important for running containers. I then walked you through getting Fedora CoreOS, creating an Ignition file, booting Fedora CoreOS, logging in, and running a test container. In this article, I will walk you through customizing Fedora CoreOS and making use of its immutable and atomic nature.&lt;/p&gt; &lt;h2 id="extending-ignition-files"&gt;Extending Ignition files&lt;/h2&gt; &lt;p&gt;In part one, we saw a basic example with a minimal Ignition file that we generated from an FCC file and then injected a public SSH key. We extend this example by adding more logic; for example, the creation of a &lt;code&gt;systemd&lt;/code&gt; unit. Since we are working on a container-optimized system why not create a &lt;code&gt;systemd&lt;/code&gt; unit with Podman? Thanks to the daemonless nature of Podman we can run, start or stop our containers in a systemd unit and manage their startup order easily.&lt;/p&gt; &lt;p&gt;For this purpose, I extended the previous FCC file:&lt;/p&gt; &lt;pre&gt;variant: fcos version: 1.0.0 passwd: users: - name: core ssh_authorized_keys: - ssh-rsa AAAAB3Nza... systemd: units: - name: hello.service enabled: true contents: | [Unit] Description=A hello world unit! After=network-online.target Wants=network-online.target [Service] Type=forking KillMode=none Restart=on-failure RemainAfterExit=yes ExecStartPre=podman pull quay.io/gbsalinetti/hello-server ExecStart=podman run -d --name hello-server -p 8080:8080 quay.io/gbsalinetti/hello-server ExecStop=podman stop -t 10 hello-server ExecStopPost=podman rm hello-server [Install] WantedBy=multi-user.target&lt;/pre&gt; &lt;p&gt;This time, I added a simple unit file to launch a self-made image that runs a minimal and ephemeral Go web server and then prints a &amp;#8220;Hello World&amp;#8221; message. The source code for the example &lt;a href="https://github.com/giannisalinetti/hello-server.git" target="_blank" rel="noopener noreferrer"&gt;can be found here&lt;/a&gt;. Take a look at the file&amp;#8217;s &lt;code&gt;systemd&lt;/code&gt; section and its &lt;code&gt;units&lt;/code&gt; subsection, which contains a list of items representing one or more unit files. In this block, we can define as many units as we need, and they will be created and started at boot.&lt;/p&gt; &lt;p&gt;We can use Ignition configs to manage storage and users; create files, directories, and &lt;code&gt;systemd&lt;/code&gt; units; and inject ssh keys. Detailed syntax documentation with examples of Ignition syntax can be found &lt;a href="https://docs.fedoraproject.org/en-US/fedora-coreos/fcct-config/" target="_blank" rel="noopener noreferrer"&gt;in the fcct-config documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;After customizing the FCC file, we must generate the Ignition file using the &lt;code&gt;fcct&lt;/code&gt; tool:&lt;/p&gt; &lt;pre&gt;$ fcct -input example-fcc-systemd.yaml -output example-ignition-systemd.json&lt;/pre&gt; &lt;h2&gt;Testing the new instance&lt;/h2&gt; &lt;p&gt;We are ready to apply the generated Ignition file to the FCOS new instance using the &lt;code&gt;virt-install&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ sudo virt-install --connect qemu:///system \ -n fcos -r 2048 --os-variant=fedora31 --import \ --graphics=none \ --disk size=10,backing_store=/home/gbsalinetti/Labs/fedora-coreos/fedora-coreos-31.20200118.3.0-qemu.x86_64.qcow2 \ --qemu-commandline="-fw_cfg name=opt/com.coreos/config,file=/home/gbsalinetti/Labs/fedora-coreos/example-ignition-systemd.ign"&lt;/pre&gt; &lt;p&gt;At the end of the boot process, let’s log in and check if the container is running (update your IP address accordingly in the &lt;code&gt;ssh&lt;/code&gt; command):&lt;/p&gt; &lt;pre&gt;$ ssh core@192.168.122.11 Fedora CoreOS 31.20200118.3.0 Tracker: https://github.com/coreos/fedora-coreos-tracker Last login: Fri Feb 7 23:22:31 2020 from 192.168.122.1 [core@localhost ~]$ systemctl status hello.service ● hello.service - A hello world unit! Loaded: loaded (/etc/systemd/system/hello.service; enabled; vendor preset: enabled) Active: active (exited) since Fri 2020-02-07 23:18:39 UTC; 12min ago Process: 2055 ExecStartPre=/usr/bin/podman pull quay.io/gbsalinetti/hello-server (code=exited, status=0/SUCCESS) Process: 2112 ExecStart=/usr/bin/podman run -d --name hello-server -p 8080:8080 quay.io/gbsalinetti/hello-server (code=exited, status=0/SUCCESS) Main PID: 2112 (code=exited, status=0/SUCCESS) Feb 07 23:18:17 localhost podman[2055]: Writing manifest to image destination Feb 07 23:18:17 localhost podman[2055]: Storing signatures Feb 07 23:18:38 localhost podman[2055]: 2020-02-07 23:18:38.671593577 +0000 UTC m=+47.966065770 image pull Feb 07 23:18:38 localhost podman[2055]: 146c93bfc4df81797068fdc26ee396348ba8c83a2d21b2d7dffc242dcdf38adb Feb 07 23:18:38 localhost systemd[1]: Started A hello world unit!. Feb 07 23:18:39 localhost podman[2112]: 2020-02-07 23:18:39.020399261 +0000 UTC m=+0.271239416 container create 2abf8d30360c03aead01092bbd8a8a51182a603911aac&amp;#62; Feb 07 23:18:39 localhost podman[2112]: 2020-02-07 23:18:39.801631894 +0000 UTC m=+1.052472079 container init 2abf8d30360c03aead01092bbd8a8a51182a603911aac9f&amp;#62; Feb 07 23:18:39 localhost podman[2112]: 2020-02-07 23:18:39.845449198 +0000 UTC m=+1.096289478 container start 2abf8d30360c03aead01092bbd8a8a51182a603911aac9&amp;#62; Feb 07 23:18:39 localhost podman[2112]: 2abf8d30360c03aead01092bbd8a8a51182a603911aac9f8b4f5a465f0360f05 Feb 07 23:18:39 localhost systemd[1]: hello.service: Succeeded.&lt;/pre&gt; &lt;p&gt;We have launched a container as a one-shot Podman command. In the example, the command exited with a 0/SUCCESS status and the container was started successfully.&lt;/p&gt; &lt;p&gt;To inspect the running container, we can use the &lt;code&gt;podman ps&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2abf8d30360c quay.io/gbsalinetti/hello-server:latest hello-server 14 minutes ago Up 14 minutes ago 0.0.0.0:8080-&amp;#62;8080/tcp hello-server&lt;/pre&gt; &lt;p&gt;Why use &lt;code&gt;sudo&lt;/code&gt;? We launched Podman under &lt;code&gt;systemd&lt;/code&gt;, so the command was executed with root user privileges. This result is &lt;em&gt;not a rootless container&lt;/em&gt;, also called &lt;em&gt;rootful container&lt;/em&gt;.&lt;/p&gt; &lt;h2 id="the-rpm-ostree-tool"&gt;The &lt;code&gt;rpm-ostree&lt;/code&gt; tool&lt;/h2&gt; &lt;p&gt;Now that we have played with Ignition files, let us learn how to handle system changes starting with RPM packages installation, and learn how package installs are handled in FCOS. If we try to launch the &lt;code&gt;yum&lt;/code&gt; command in Fedora CoreOS we receive a &amp;#8220;command not found&amp;#8221; error. We get this same result running &lt;code&gt;dnf&lt;/code&gt;. Instead, the utility managing packages in this kind of architecture must wrap RPM-based package management on top of an atomic file system management library. Every package change must be committed to the file system.&lt;/p&gt; &lt;p&gt;We already mentioned the &lt;code&gt;rpm-ostree&lt;/code&gt; tool before. Let’s use it to apply a persistent change to the base OS image and then install &lt;a href="https://buildah.io/" target="_blank" rel="noopener noreferrer"&gt;the &lt;code&gt;buildah&lt;/code&gt; package&lt;/a&gt;. Buildah is a great tool for managing Open Container Initiative (OCI) image builds because it replicates all of the instructions found in a Dockerfile, allowing us to build images with or without a Dockerfile while not requiring root privileges.&lt;/p&gt; &lt;h3&gt;Installing new packages&lt;/h3&gt; &lt;p&gt;A short recap before installing: There is no &lt;code&gt;dnf&lt;/code&gt; or &lt;code&gt;yum&lt;/code&gt; tool installed in FCOS, and &lt;code&gt;rpm-ostree&lt;/code&gt; (built on top of the &lt;code&gt;libostree&lt;/code&gt; library) is the default package manager. Changes are committed internally and systems are rebooted to apply the new layer.&lt;/p&gt; &lt;p&gt;Let’s check the status of the system prior to installation:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ rpm-ostree status State: idle AutomaticUpdates: disabled Deployments: ● ostree://fedora:fedora/x86_64/coreos/stable Version: 31.20200118.3.0 (2020-01-28T16:10:53Z) Commit: 093f7da6ffa161ae1648a05be9c55f758258ab97b55c628bea5259f6ac6e370e GPGSignature: Valid signature by 7D22D5867F2A4236474BF7B850CB390B3C3359C4&lt;/pre&gt; &lt;p&gt;We can see only one layer here, with a specific commit ID. The &lt;code&gt;rpm-ostree status --json&lt;/code&gt; command can be used to print extended statuses.&lt;/p&gt; &lt;p&gt;Now, let’s install the &lt;code&gt;buildah&lt;/code&gt; package with the &lt;code&gt;rpm-ostree install&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ sudo rpm-ostree install buildah&lt;/pre&gt; &lt;p&gt;Let’s check the &lt;code&gt;rpm-ostree status&lt;/code&gt; output again:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ rpm-ostree status State: idle AutomaticUpdates: disabled Deployments: ostree://fedora:fedora/x86_64/coreos/stable Version: 31.20200118.3.0 (2020-01-28T16:10:53Z) BaseCommit: 093f7da6ffa161ae1648a05be9c55f758258ab97b55c628bea5259f6ac6e370e GPGSignature: Valid signature by 7D22D5867F2A4236474BF7B850CB390B3C3359C4 Diff: 1 added LayeredPackages: buildah ● ostree://fedora:fedora/x86_64/coreos/stable Version: 31.20200118.3.0 (2020-01-28T16:10:53Z) Commit: 093f7da6ffa161ae1648a05be9c55f758258ab97b55c628bea5259f6ac6e370e GPGSignature: Valid signature by 7D22D5867F2A4236474BF7B850CB390B3C3359C4&lt;/pre&gt; &lt;p&gt;The new commit added a new layer and the list of layered packages shows the Buildah package we installed before. We can then layer as many packages as we want; for example, &lt;code&gt;tcpdump&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo rpm-ostree install tcpdump&lt;/pre&gt; &lt;p&gt;When we run the &lt;code&gt;rpm-ostree status&lt;/code&gt; command again:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ rpm-ostree status State: idle AutomaticUpdates: disabled Deployments: ostree://fedora:fedora/x86_64/coreos/stable Version: 31.20200118.3.0 (2020-01-28T16:10:53Z) BaseCommit: 093f7da6ffa161ae1648a05be9c55f758258ab97b55c628bea5259f6ac6e370e GPGSignature: Valid signature by 7D22D5867F2A4236474BF7B850CB390B3C3359C4 Diff: 2 added LayeredPackages: buildah tcpdump ● ostree://fedora:fedora/x86_64/coreos/stable Version: 31.20200118.3.0 (2020-01-28T16:10:53Z) Commit: 093f7da6ffa161ae1648a05be9c55f758258ab97b55c628bea5259f6ac6e370e GPGSignature: Valid signature by 7D22D5867F2A4236474BF7B850CB390B3C3359C4&lt;/pre&gt; &lt;p&gt;The new commit has two layered packages. Let’s launch &lt;code&gt;buildah&lt;/code&gt; now:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ buildah --help -bash: buildah: command not found&lt;/pre&gt; &lt;p&gt;Ouch, it looks like the binary isn’t installed yet. Once again, this response is correct because the system is still running on top of the base layer. To solve this problem and see the layered packages, we need to restart the system so it boots into the new file system layer:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo systemctl reboot&lt;/pre&gt; &lt;p&gt;Now we can enjoy the layered packages we installed before as they appear in the file system after the reboot.&lt;/p&gt; &lt;h2&gt;How package management works&lt;/h2&gt; &lt;p&gt;When installing packages, we are not really creating a new commit. Instead, we are layering the packages on top of the current system commit with a new deployment. Those layered packages will persist across updates and rebases. In other words, &lt;code&gt;rpm-ostree&lt;/code&gt; fuses the best of image layers and package management.&lt;/p&gt; &lt;h3&gt;Rolling back changes&lt;/h3&gt; &lt;p&gt;The great thing about an atomic system the support for &lt;em&gt;atomic rollbacks&lt;/em&gt;. This feature is useful when we reach an unstable configuration after an update and need to go back immediately to a working and stable system:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo rpm-ostree rollback Moving '093f7da6ffa161ae1648a05be9c55f758258ab97b55c628bea5259f6ac6e370e.0' to be first deployment Transaction complete; bootconfig swap: no; deployment count change: 0 Removed: buildah-1.12.0-2.fc31.x86_64 tcpdump-14:4.9.3-1.fc31.x86_64 Run "systemctl reboot" to start a reboot&lt;/pre&gt; &lt;p&gt;Once again, a reboot is necessary to boot the system with the rolled back layer.&lt;/p&gt; &lt;h3&gt;Uninstalling&lt;/h3&gt; &lt;p&gt;If we need to uninstall a single package without rolling everything back, we can use the &lt;code&gt;rpm-ostree uninstall&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo rpm-ostree uninstall buildah Staging deployment... done Removed: buildah-1.12.0-2.fc31.x86_64 Run "systemctl reboot" to start a reboot&lt;/pre&gt; &lt;p&gt;After reboot, the package won&amp;#8217;t be available anymore.&lt;/p&gt; &lt;h2 id="more-in-depth-with-ostree"&gt;More in-depth with OSTree&lt;/h2&gt; &lt;p&gt;The &lt;code&gt;libostree&lt;/code&gt; library offers an API to manipulate atomic transactions on&lt;br /&gt; immutable file systems by managing them as whole trees. The &lt;code&gt;ostree&lt;/code&gt; command is the default tool used to manage these changes. There are many language bindings useful to create our own implementations; for example, &lt;a href="https://github.com/ostreedev/ostree-go"&gt;&lt;code&gt;ostree-go&lt;/code&gt;&lt;/a&gt; is the language binding for Golang.&lt;/p&gt; &lt;h3&gt;Listing branches&lt;/h3&gt; &lt;p&gt;We can see the delta between the two file system layers with the &lt;code&gt;ostree refs&lt;/code&gt; command. First, we need to locate the different &lt;em&gt;refs&lt;/em&gt; to the committed layers:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ ostree refs rpmostree/pkg/buildah/1.12.0-2.fc31.x86__64 rpmostree/base/0 ostree/0/1/1 rpmostree/pkg/tcpdump/14_3A4.9.3-1.fc31.x86__64 fedora:fedora/x86_64/coreos/stable ostree/0/1/0&lt;/pre&gt; &lt;p&gt;Think of the refs as different branches, like in a Git repository. Notice the branches created by &lt;code&gt;rpm-ostree&lt;/code&gt;, beginning with the pattern &lt;code&gt;rpmostree/pkg/&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Inspecting &lt;code&gt;refs&lt;/code&gt; content&lt;/h3&gt; &lt;p&gt;To inspect the changes that happened in a branch, we can use the &lt;code&gt;ostree ls&lt;/code&gt; command. For example, to see the files and directory changed by the &lt;code&gt;buildah&lt;/code&gt; package:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ ostree ls -R rpmostree/pkg/buildah/1.12.0-2.fc31.x86__64 d00755 0 0 0 / d00755 0 0 0 /usr d00755 0 0 0 /usr/bin -00755 0 0 37474136 /usr/bin/buildah d00755 0 0 0 /usr/lib d00755 0 0 0 /usr/lib/.build-id d00755 0 0 0 /usr/lib/.build-id/db l00777 0 0 0 /usr/lib/.build-id/db/7c450ca346e503747a530a7185d9c16dc9a132 -&amp;#62; ../../../../usr/bin/buildah d00755 0 0 0 /usr/share d00755 0 0 0 /usr/share/bash-completion d00755 0 0 0 /usr/share/bash-completion/completions -00644 0 0 22816 /usr/share/bash-completion/completions/buildah d00755 0 0 0 /usr/share/doc d00755 0 0 0 /usr/share/doc/buildah -00644 0 0 8450 /usr/share/doc/buildah/README.md d00755 0 0 0 /usr/share/licenses d00755 0 0 0 /usr/share/licenses/buildah -00644 0 0 11357 /usr/share/licenses/buildah/LICENSE d00755 0 0 0 /usr/share/man d00755 0 0 0 /usr/share/man/man1 -00644 0 0 719 /usr/share/man/man1/buildah-add.1.gz -00644 0 0 10290 /usr/share/man/man1/buildah-bud.1.gz -00644 0 0 2264 /usr/share/man/man1/buildah-commit.1.gz -00644 0 0 2426 /usr/share/man/man1/buildah-config.1.gz -00644 0 0 1359 /usr/share/man/man1/buildah-containers.1.gz -00644 0 0 662 /usr/share/man/man1/buildah-copy.1.gz -00644 0 0 8654 /usr/share/man/man1/buildah-from.1.gz -00644 0 0 1691 /usr/share/man/man1/buildah-images.1.gz -00644 0 0 891 /usr/share/man/man1/buildah-info.1.gz -00644 0 0 635 /usr/share/man/man1/buildah-inspect.1.gz -00644 0 0 1029 /usr/share/man/man1/buildah-login.1.gz -00644 0 0 637 /usr/share/man/man1/buildah-logout.1.gz -00644 0 0 1051 /usr/share/man/man1/buildah-manifest-add.1.gz -00644 0 0 856 /usr/share/man/man1/buildah-manifest-annotate.1.gz -00644 0 0 615 /usr/share/man/man1/buildah-manifest-create.1.gz -00644 0 0 334 /usr/share/man/man1/buildah-manifest-inspect.1.gz -00644 0 0 907 /usr/share/man/man1/buildah-manifest-push.1.gz -00644 0 0 459 /usr/share/man/man1/buildah-manifest-remove.1.gz -00644 0 0 608 /usr/share/man/man1/buildah-manifest.1.gz -00644 0 0 1072 /usr/share/man/man1/buildah-mount.1.gz -00644 0 0 2144 /usr/share/man/man1/buildah-pull.1.gz -00644 0 0 2440 /usr/share/man/man1/buildah-push.1.gz -00644 0 0 200 /usr/share/man/man1/buildah-rename.1.gz -00644 0 0 363 /usr/share/man/man1/buildah-rm.1.gz -00644 0 0 905 /usr/share/man/man1/buildah-rmi.1.gz -00644 0 0 4268 /usr/share/man/man1/buildah-run.1.gz -00644 0 0 225 /usr/share/man/man1/buildah-tag.1.gz -00644 0 0 298 /usr/share/man/man1/buildah-umount.1.gz -00644 0 0 1111 /usr/share/man/man1/buildah-unshare.1.gz -00644 0 0 312 /usr/share/man/man1/buildah-version.1.gz -00644 0 0 2539 /usr/share/man/man1/buildah.1.gz&lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Single directories from a branch can be listed as well:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ ostree ls -R rpmostree/pkg/buildah/1.12.0-2.fc31.x86__64 /usr/bin d00755 0 0 0 /usr/bin -00755 0 0 37830616 /usr/bin/buildah &lt;/pre&gt; &lt;p&gt;We can also check out a branch to an external directory with the &lt;code&gt;ostree checkout&lt;/code&gt; command. The following example applies to the &lt;code&gt;buildah&lt;/code&gt; ref:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo ostree checkout rpmostree/pkg/buildah/1.12.0-2.fc31.x86__64 /tmp/buildah_checkout&lt;/pre&gt; &lt;p&gt;After running the above command the &lt;code&gt;/tmp/buildah_checkout&lt;/code&gt; folder will contain all the files checked out from the &lt;code&gt;rpmostree/pkg/buildah/1.12.0-2.fc31.x86__64&lt;/code&gt; branch. This is a great feature for debugging and troubleshooting.&lt;/p&gt; &lt;h2&gt;Rebasing&lt;/h2&gt; &lt;p&gt;Now that we have introduced the &lt;code&gt;ostree&lt;/code&gt; command, we can show an amazing feature: &lt;em&gt;rebasing&lt;/em&gt;. With rebasing, we can move to a different branch and radically modify our file system tree.&lt;/p&gt; &lt;p&gt;Ever wonder how to switch from a stable release to a testing release and then to a rawhide without reinstalling? With rebasing it&amp;#8217;s possible!&lt;/p&gt; &lt;p&gt;The &lt;code&gt;rpm-ostree rebase&lt;/code&gt; command can take a branch as an argument and move the whole system to that branch. If we recall the output of the &lt;code&gt;ostree refs&lt;/code&gt; command, there was the following line: &lt;code&gt;fedora:fedora/x86_64/coreos/stable&lt;/code&gt;. This output means that we are on the &lt;code&gt;stable&lt;/code&gt; branch of Fedora CoreOS. If we want to switch to the &lt;code&gt;testing&lt;/code&gt; branch, we just have to rebase, like in the following example.&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo rpm-ostree rebase -b fedora:fedora/x86_64/coreos/testing ⠒ Receiving objects: 99% (5030/5031) 627.5 kB/s 151.2 MB Receiving objects: 99% (5030/5031) 627.5 kB/s 151.2 MB... done Staging deployment... done Upgraded: NetworkManager 1:1.20.8-1.fc31 -&amp;#62; 1:1.20.10-1.fc31 NetworkManager-libnm 1:1.20.8-1.fc31 -&amp;#62; 1:1.20.10-1.fc31 e2fsprogs 1.45.3-1.fc31 -&amp;#62; 1.45.5-1.fc31 e2fsprogs-libs 1.45.3-1.fc31 -&amp;#62; 1.45.5-1.fc31 fuse-overlayfs 0.7.3-2.fc31 -&amp;#62; 0.7.5-2.fc31 glibc 2.30-8.fc31 -&amp;#62; 2.30-10.fc31 glibc-all-langpacks 2.30-8.fc31 -&amp;#62; 2.30-10.fc31 glibc-common 2.30-8.fc31 -&amp;#62; 2.30-10.fc31 kernel 5.4.10-200.fc31 -&amp;#62; 5.4.13-201.fc31 kernel-core 5.4.10-200.fc31 -&amp;#62; 5.4.13-201.fc31 kernel-modules 5.4.10-200.fc31 -&amp;#62; 5.4.13-201.fc31 libcom_err 1.45.3-1.fc31 -&amp;#62; 1.45.5-1.fc31 libsolv 0.7.10-1.fc31 -&amp;#62; 0.7.11-1.fc31 libss 1.45.3-1.fc31 -&amp;#62; 1.45.5-1.fc31 pcre2 10.33-16.fc31 -&amp;#62; 10.34-4.fc31 selinux-policy 3.14.4-43.fc31 -&amp;#62; 3.14.4-44.fc31 selinux-policy-targeted 3.14.4-43.fc31 -&amp;#62; 3.14.4-44.fc31 socat 1.7.3.3-2.fc31 -&amp;#62; 1.7.3.4-1.fc31 toolbox 0.0.17-1.fc31 -&amp;#62; 0.0.18-1.fc31 whois-nls 5.5.4-1.fc31 -&amp;#62; 5.5.4-2.fc31 zchunk-libs 1.1.4-1.fc31 -&amp;#62; 1.1.5-1.fc31 Removed: buildah-1.12.0-2.fc31.x86_64 Run "systemctl reboot" to start a reboot&lt;/pre&gt; &lt;p&gt;Notice the list of packages upgraded to switch from the &lt;code&gt;stable&lt;/code&gt; to the &lt;code&gt;testing&lt;/code&gt; branch. Now, the &lt;code&gt;ostree refs&lt;/code&gt; output is slightly different, with the &lt;code&gt;testing&lt;/code&gt; branch replacing &lt;code&gt;stable&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ ostree refs rpmostree/pkg/buildah/1.12.0-2.fc31.x86__64 rpmostree/base/0 ostree/0/1/1 rpmostree/pkg/tcpdump/14_3A4.9.3-1.fc31.x86__64 fedora:fedora/x86_64/coreos/testing ostree/0/1/0&lt;/pre&gt; &lt;p&gt;This &lt;a href="https://github.com/coreos/fedora-coreos-tracker/blob/master/Design.md#release-streams" target="_blank" rel="noopener noreferrer"&gt;release streams link&lt;/a&gt; contains a more detailed discussion of how branches are managed.&lt;/p&gt; &lt;h2&gt;File system analysis&lt;/h2&gt; &lt;p&gt;It is easy to notice that some directories are not writable; for example, when trying to write to &lt;code&gt;/usr&lt;/code&gt;we get a read-only file system error. When the system boots, only certain portions (like &lt;code&gt;/var&lt;/code&gt;) are made writable. So, how does &lt;code&gt;ostree&lt;/code&gt; manage files?&lt;/p&gt; &lt;p&gt;The &lt;code&gt;ostree&lt;/code&gt; architecture design states that the system read-only content is kept in the &lt;code&gt;/usr&lt;/code&gt; directory. The &lt;code&gt;/var&lt;/code&gt; directory is shared across all system deployments and is writable by processes, and there is an&lt;code&gt;/etc&lt;/code&gt; directory for every system deployment. When system changes or upgrades, previous modifications in the&lt;code&gt;/etc&lt;/code&gt; directory are merged with the copy in the new deployment.&lt;/p&gt; &lt;p&gt;All of these changes are stored in an OSTree repository in &lt;code&gt;/ostree/repo&lt;/code&gt;, which is a symlink to &lt;code&gt;/sysroot/ostree/repo&lt;/code&gt;. This directory stores all system deployments. Think of &lt;code&gt;/sysroot/ostree/repo&lt;/code&gt; like the &lt;code&gt;.git&lt;/code&gt;directory in a Git repository.&lt;/p&gt; &lt;p&gt;To check the current status and identify the active deployment UUID, use the following command:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo ostree admin status * fedora-coreos 4ea6beed22d0adc4599452de85820f6e157ac1750e688d062bfedc765b193505.0 Version: 31.20200210.3.0 origin refspec: fedora:fedora/x86_64/coreos/stable&lt;/pre&gt; &lt;p&gt;If we inspect the &lt;code&gt;/ostree&lt;/code&gt; folder in a freshly installed system, we find an exact match that contains our booted file system tree:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ ls -al /ostree/boot.1/fedora-coreos/19190477fad0e60d605a623b86e06bb92aa318b6b79f78696b06f68f262ad5d6/0/ total 8 drwxr-xr-x. 12 root root 253 Feb 24 16:52 . drwxrwxr-x. 3 root root 161 Feb 24 16:52 .. lrwxrwxrwx. 2 root root 7 Feb 24 16:51 bin -&amp;#62; usr/bin drwxr-xr-x. 2 root root 6 Jan 1 1970 boot drwxr-xr-x. 2 root root 6 Jan 1 1970 dev drwxr-xr-x. 77 root root 4096 Mar 11 08:54 etc lrwxrwxrwx. 2 root root 8 Feb 24 16:51 home -&amp;#62; var/home lrwxrwxrwx. 2 root root 7 Feb 24 16:51 lib -&amp;#62; usr/lib lrwxrwxrwx. 2 root root 9 Feb 24 16:51 lib64 -&amp;#62; usr/lib64 lrwxrwxrwx. 2 root root 9 Feb 24 16:51 media -&amp;#62; run/media lrwxrwxrwx. 2 root root 7 Feb 24 16:51 mnt -&amp;#62; var/mnt lrwxrwxrwx. 2 root root 7 Feb 24 16:51 opt -&amp;#62; var/opt lrwxrwxrwx. 2 root root 14 Feb 24 16:51 ostree -&amp;#62; sysroot/ostree drwxr-xr-x. 2 root root 6 Jan 1 1970 proc lrwxrwxrwx. 2 root root 12 Feb 24 16:51 root -&amp;#62; var/roothome drwxr-xr-x. 2 root root 6 Jan 1 1970 run lrwxrwxrwx. 2 root root 8 Feb 24 16:51 sbin -&amp;#62; usr/sbin lrwxrwxrwx. 2 root root 7 Feb 24 16:51 srv -&amp;#62; var/srv drwxr-xr-x. 2 root root 6 Jan 1 1970 sys drwxr-xr-x. 2 root root 6 Jan 1 1970 sysroot drwxrwxrwt. 2 root root 6 Mar 11 08:37 tmp drwxr-xr-x. 12 root root 155 Jan 1 1970 usr drwxr-xr-x. 4 root root 28 Mar 11 08:37 var&lt;/pre&gt; &lt;p&gt;The above directory represents the booted deployment and is actually a symbolic link to a ref under &lt;code&gt;/ostree/deploy/fedora-cores/deploy/&lt;/code&gt;. Notice that the directory&amp;#8217;s name will match with the UUID  printed by the &lt;code&gt;ostree admin status&lt;/code&gt; command&amp;#8217;s output.&lt;/p&gt; &lt;p&gt;At system boot, some directories in the filesystem root are created as hard links to the active deployment tree. Since hard links point to the same inode number in the file system, let&amp;#8217;s cross-check the inode number of the &lt;code&gt;/usr&lt;/code&gt; folder and the one in the booted deployment:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ ls -alid /usr 3218784 drwxr-xr-x. 12 root root 155 Jan 1 1970 /usr [core@localhost ~]$ ls -alid /sysroot/ostree/boot.1/fedora-coreos/19190477fad0e60d605a623b86e06bb92aa318b6b79f78696b06f68f262ad5d6/0/usr/ 3218784 drwxr-xr-x. 12 root root 155 Jan 1 1970 /sysroot/ostree/boot.1/fedora-coreos/19190477fad0e60d605a623b86e06bb92aa318b6b79f78696b06f68f262ad5d6/0/usr/&lt;/pre&gt; &lt;p&gt;As expected, the inode number 3218784 is the same for both directories, demonstrating that the content under the filesystem root is composed of the active deployment.&lt;/p&gt; &lt;p&gt;What happened when we installed the Buildah package with &lt;code&gt;rpm-ostree&lt;/code&gt;? After rebooting, a new deployment will appear:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo ostree admin status * fedora-coreos ee678bde3c15d8cae34515e84e2b4432ba3d8c9619ca92c319b576a13029481d.0 Version: 31.20200210.3.0 origin: &amp;#60;unknown origin type&amp;#62; fedora-coreos 4ea6beed22d0adc4599452de85820f6e157ac1750e688d062bfedc765b193505.0 (rollback) Version: 31.20200210.3.0 origin refspec: fedora:fedora/x86_64/coreos/stable&lt;/pre&gt; &lt;p&gt;Notice the star next to the current active deployment. We expect to find it under &lt;code&gt;/ostree/deploy/fedora-cores/deploy&lt;/code&gt;along with the old one:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ ls -al /ostree/deploy/fedora-coreos/deploy/ total 12 drwxrwxr-x. 4 root root 4096 Mar 11 10:18 . drwxrwxr-x. 4 root root 31 Feb 24 16:52 .. drwxr-xr-x. 12 root root 253 Feb 24 16:52 4ea6beed22d0adc4599452de85820f6e157ac1750e688d062bfedc765b193505.0 -rw-r--r--. 1 root root 52 Feb 24 16:52 4ea6beed22d0adc4599452de85820f6e157ac1750e688d062bfedc765b193505.0.origin drwxr-xr-x. 12 root root 253 Mar 11 10:01 ee678bde3c15d8cae34515e84e2b4432ba3d8c9619ca92c319b576a13029481d.0 -rw-r--r--. 1 root root 87 Mar 11 10:18 ee678bde3c15d8cae34515e84e2b4432ba3d8c9619ca92c319b576a13029481d.0.origin&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;/ostree/deploy/fedora-cores&lt;/code&gt; directory is also called &lt;em&gt;stateroot&lt;/em&gt; or &lt;em&gt;osname&lt;/em&gt;, and it contains the deployment and all its related commits. In every stateroot directory there is only one &lt;code&gt;var&lt;/code&gt; directory that is mounted under &lt;code&gt;/var&lt;/code&gt; using a &lt;code&gt;systemd&lt;/code&gt; mount unit (repesented by the file&lt;code&gt;/run/systemd/generator/var.mount&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s finish this file system deep dive with a look into the &lt;code&gt;/ostree/repo&lt;/code&gt; folder. This is where we can find the closest similarities with Git:&lt;/p&gt; &lt;pre&gt;[core@localhost repo]$ ls -al /ostree/repo/ total 16 drwxrwxr-x. 7 root root 102 Mar 11 10:18 . drwxrwxr-x. 5 root root 62 Mar 11 10:18 .. -rw-r--r--. 1 root root 73 Feb 24 16:52 config drwxr-xr-x. 3 root root 23 Mar 11 09:59 extensions -rw-------. 1 root root 0 Feb 24 16:51 .lock drwxr-xr-x. 258 root root 8192 Feb 24 16:52 objects drwxr-xr-x. 5 root root 49 Feb 24 16:51 refs drwxr-xr-x. 2 root root 6 Feb 24 16:52 state drwxr-xr-x. 3 root root 19 Mar 11 10:18 tmp&lt;/pre&gt; &lt;p&gt;Notice the &lt;code&gt;refs&lt;/code&gt; and &lt;code&gt;objects&lt;/code&gt; folders, which store respectively the branch information and the objects versioned. Here, we have an exact matching within the &lt;code&gt;.git&lt;/code&gt; folder of a typical Git repository.&lt;/p&gt; &lt;h2 id="managing-system-upgrades"&gt;Managing system upgrades&lt;/h2&gt; &lt;p&gt;It should be clear by now that &lt;code&gt;rpm-ostree&lt;/code&gt; works on top of the &lt;code&gt;ostree&lt;/code&gt; library and provides packages management with an atomic approach. System upgrades are also atomic. Upgrading a system is just layering a new commit on top of the existing file system, and we can do it easily with the &lt;code&gt;rpm-ostree upgrade&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo rpm-ostree upgrade -r&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;-r&lt;/code&gt; flag tells &lt;code&gt;rpm-ostree&lt;/code&gt; to automatically reboot after the upgrade is complete.&lt;/p&gt; &lt;p&gt;Despite letting users upgrade systems manually, FCOS provides a dedicated service that manages system upgrades called &lt;a href="https://github.com/coreos/zincati" target="_blank" rel="noopener noreferrer"&gt;Zincati&lt;/a&gt;. Zincati is an agent that performs periodic upgrade checks and applies them. We can check our Zincati service status with the &lt;code&gt;systemctl&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;[core@localhost ~]$ sudo systemctl status zincati ● zincati.service - Zincati Update Agent Loaded: loaded (/usr/lib/systemd/system/zincati.service; enabled; vendor preset: enabled) Active: active (running) since Fri 2020-02-07 11:36:33 UTC; 3min 30s ago Docs: https://github.com/coreos/zincati Main PID: 707 (zincati) Tasks: 2 (limit: 2297) Memory: 17.5M CGroup: /system.slice/zincati.service └─707 /usr/libexec/zincati agent -v Feb 07 11:36:33 localhost systemd[1]: Started Zincati Update Agent. Feb 07 11:36:33 localhost zincati[707]: [INFO ] starting update agent (zincati 0.0.6) Feb 07 11:36:39 localhost zincati[707]: [INFO ] Cincinnati service: https://updates.coreos.stg.fedoraproject.org Feb 07 11:36:39 localhost zincati[707]: [INFO ] agent running on node '20d1f6332922438d8a8edede3fbe6251', in update group 'default' Feb 07 11:36:39 localhost zincati[707]: [INFO ] initialization complete, auto-updates logic enabled&lt;/pre&gt; &lt;p&gt;Zincati behavior can be customized. Default configs are already installed under &lt;code&gt;/usr/lib/zincati/config.d/&lt;/code&gt;, while users can apply custom configs in &lt;code&gt;/etc/zincati/configs.d/&lt;/code&gt; and override the defaults.&lt;/p&gt; &lt;h2 id="fedora-coreos-red-hat-coreos-and-openshift"&gt;OpenShift 4 and the Machine Config Operator&lt;/h2&gt; &lt;p&gt;The developer community is working toward integrating OKD 4 and Fedora CoreOS and we are waiting the first stable release of OKD 4 very soon.&lt;/p&gt; &lt;p&gt;Nowadays, all &lt;a href="https://developers.redhat.com/products/openshift" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Platform 4&lt;/a&gt; (RHOCP), run on top of Red Hat CoreOS (RHCOS) nodes. It’s useful to understand how RHCOS systems are managed. Let’s start with a provocation. In RHOCP 4, no sysadmin should SSH to the RHCOS or Fedora CoreOS nodes to make changes.&lt;/p&gt; &lt;p&gt;Who takes care of node management, upgrades, and who applies Ignition configs? All of these tasks are managed in OpenShift by the &lt;a href="https://github.com/openshift/machine-config-operator"&gt;Machine Config Operator&lt;/a&gt; (MCO), which was already mentioned in the previous article.&lt;/p&gt; &lt;p&gt;The MCO is a core opeator and it spawns different components in the OpenShift cluster:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;machine-config-server&lt;/code&gt; (MCS) serves the Ignition files to the nodes via HTTPS.&lt;/li&gt; &lt;li&gt;&lt;code&gt;machine-config-controller&lt;/code&gt; (MCC) coordinates upgrades of machines to their desired configurations as defined by &lt;code&gt;MachineConfig&lt;/code&gt; objects.&lt;/li&gt; &lt;li&gt;&lt;code&gt;machine-config-daemon&lt;/code&gt; (MCD) runs on every node as a DaemonSet, applying machine configurations and validating the machines&amp;#8217; state to the requested configurations.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;MCD performs configurations defined in the provided Ignition files using CoreOS technology. For more details about the &lt;code&gt;machine-config-daemon&lt;/code&gt;, &lt;a href="https://github.com/openshift/machine-config-operator/blob/master/docs/MachineConfigDaemon.md" target="_blank" rel="noopener noreferrer"&gt;read this documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The MCD manages system upgrades using Podman to pull and mount system images and &lt;code&gt;rpm-ostree rebase&lt;/code&gt; to rebase RHCOS nodes to the mounted container&amp;#8217;s file system trees. In other words, OCI images are used to transport whole, upgraded file systems to nodes.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;MachineConfig&lt;/code&gt; objects processed by the MCD are nothing but OpenShift resources that embed Ignition configs. MachineConfigs are assigned to a &lt;code&gt;MachineConfigPools&lt;/code&gt; and applied on all the machines belonging to that pool. Pools have a direct match with node roles in the cluster and by default we have only 2 MachineConfigPools in OCP 4, &lt;code&gt;master&lt;/code&gt;and &lt;code&gt;worker&lt;/code&gt;, but it is possible to add custom pools that reflect specific roles, for example infra nodes or HPC nodes.&lt;/p&gt; &lt;p&gt;The Machine Config Operator and the components it manages were created with the immutable and atomic approach in mind, implemented on top of Red Hat CoreOS in order to automate the day2 operations on nodes and deliver a &lt;em&gt;NoOps&lt;/em&gt; container platform to the customer.&lt;/p&gt; &lt;p&gt;The MCO architecture brings great value in hybrid cloud environment where the infrastructure automation is almost mandatory to manage complex scenarios.&lt;/p&gt; &lt;h2&gt;Conclusions&lt;/h2&gt; &lt;p&gt;This journey into the features of Fedora CoreOS and immutable systems has ended, but these two articles are just the beginning. Immutable infrastructures are the next big thing and not only in containerized workloads. I think that with the correct tooling they could be game-changers in traditional, bare metal, and on-prem scenarios.&lt;/p&gt; &lt;p&gt;By having reliable systems that are rebuilt rather than changed and managing images with a Git-like approach with commits, branches, and rollbacks, we can truly embrace the culture of Infrastructure-as-Code. This approach opens us to systems that are more maintainable, sustainable, and stable.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#38;linkname=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#38;linkname=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#38;linkname=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#38;linkname=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#38;linkname=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#38;linkname=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#38;linkname=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F12%2Fhow-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree%2F&amp;#038;title=How%20to%20customize%20Fedora%20CoreOS%20for%20dedicated%20workloads%20with%20OSTree" data-a2a-url="https://developers.redhat.com/blog/2020/03/12/how-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree/" data-a2a-title="How to customize Fedora CoreOS for dedicated workloads with OSTree"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/12/how-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree/"&gt;How to customize Fedora CoreOS for dedicated workloads with OSTree&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OL1euA4-byc" height="1" width="1" alt=""/&gt;</content><summary>In part one of this series, I introduced Fedora CoreOS (and Red Hat CoreOS) and explained why its immutable and atomic nature is important for running containers. I then walked you through getting Fedora CoreOS, creating an Ignition file, booting Fedora CoreOS, logging in, and running a test container. In this article, I will walk you through customizing Fedora CoreOS and making use of its immutab...</summary><dc:creator>Gianni Salinetti</dc:creator><dc:date>2020-03-12T07:00:21Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/12/how-to-customize-fedora-coreos-for-dedicated-workloads-with-ostree/</feedburner:origLink></entry></feed>
